<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hundun</title>
  
  <subtitle>日凿一窍,七日而混沌死</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-25T12:45:23.474Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jingyi Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2017 Annual Review</title>
    <link href="http://yoursite.com/2017/12/25/2017-Annual-Review/"/>
    <id>http://yoursite.com/2017/12/25/2017-Annual-Review/</id>
    <published>2017-12-25T12:38:00.000Z</published>
    <updated>2017-12-25T12:45:23.474Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Architecture-amp-Design"><a href="#Architecture-amp-Design" class="headerlink" title="Architecture &amp; Design"></a>Architecture &amp; Design</h2><h3 id="微服务设计（Building-Microservices）"><a href="#微服务设计（Building-Microservices）" class="headerlink" title="微服务设计（Building Microservices）"></a>微服务设计（Building Microservices）</h3><p><strong>Medium</strong><br>简单了解微服务的建模、集成、测试、部署和监控。为毛只能说是简单了解？因为不被项目操练都不好意思说深入。。。</p><h3 id="设计模式-Design-Pattern"><a href="#设计模式-Design-Pattern" class="headerlink" title="设计模式(Design Pattern)"></a>设计模式(Design Pattern)</h3><p><strong>Advanced</strong><br>面向对象的内功心法。初始还是看Head First系列易懂，但是要深入也离不开这本书的提纲挈领。有时间慢慢深入看</p><a id="more"></a><h3 id="领域驱动设计"><a href="#领域驱动设计" class="headerlink" title="领域驱动设计"></a>领域驱动设计</h3><p><strong>Advanced</strong><br>应对复杂领域软件的设计之道，领域驱动设计的经典之作，与企业设计模式并驾齐驱。注意与软件开发中的设计模式区分。对实践要求略高，结合工作经验食用更佳</p><h3 id="尽在双11-阿里巴巴技术演进与超越"><a href="#尽在双11-阿里巴巴技术演进与超越" class="headerlink" title="尽在双11 - 阿里巴巴技术演进与超越"></a>尽在双11 - 阿里巴巴技术演进与超越</h3><p><strong>Medium</strong><br>双11背后的工程师，精华技术概览与发展史。阿里双11的业务量和复杂度是大部分工程师未能参与的规模，由此书可以一窥各个系统随着大促八年的演进与提升</p><h2 id="Code-Practice"><a href="#Code-Practice" class="headerlink" title="Code Practice"></a>Code Practice</h2><h3 id="Java网络编程（Java-Network-Programming）"><a href="#Java网络编程（Java-Network-Programming）" class="headerlink" title="Java网络编程（Java Network Programming）"></a>Java网络编程（Java Network Programming）</h3><p><strong>Medium</strong><br>全面详细地引导你学习网络编程，涵盖TCP,  UDP, SSL, NIO等各项内容，底层技术的探讨保持够用为止。批评者可能说这书详细得像个超长API文档（所以书非常厚重）。书里基本给齐了示例服务器的源码（亲测直接能跑），不吝篇幅</p><h3 id="Java-8实战（Java-8-in-Action）"><a href="#Java-8实战（Java-8-in-Action）" class="headerlink" title="Java 8实战（Java 8 in Action）"></a>Java 8实战（Java 8 in Action）</h3><p><strong>Medium</strong><br>Java支持函数式编程范式后如虎添翼，终于大步缩小了与其他JVM语言（如Clojure, Scala, Groovy）的差距（Doge脸）。Lambdas，流，函数式等特性都有很详细的介绍与示例，用了就回不去系列。。。当然书只能入门，主要还是得实践，从命令式切换到声明式编程并非易事，只能在实际的需求中多锻炼了。反正坚持不用for循环，有惊喜</p><h3 id="实战Java高并发程序设计"><a href="#实战Java高并发程序设计" class="headerlink" title="实战Java高并发程序设计"></a>实战Java高并发程序设计</h3><p><strong>Advanced</strong><br>要求有一定Java基础，简练的语言结合详细的例子，介绍了并行计算的背景、Java并发的工具、锁优化、计算模式、Akka框架等等。做为Java并发实战补充着看也挺好的，并发需要了解的东西看这本书也能知道个大概，当然并发的学习从来不难在看书。。。线上打过堆栈的人都懂的</p><h3 id="从Paxos到Zookeeper：分布式一致性原理与实践"><a href="#从Paxos到Zookeeper：分布式一致性原理与实践" class="headerlink" title="从Paxos到Zookeeper：分布式一致性原理与实践"></a>从Paxos到Zookeeper：分布式一致性原理与实践</h3><p><strong>Advanced</strong><br>原理算法不明觉厉，实践很有启发。Zookeeper做为协调者与管理者的角色堪称分布式系统一致性的基石</p><h2 id="Methodology"><a href="#Methodology" class="headerlink" title="Methodology"></a>Methodology</h2><h3 id="Java编程思想（Thinking-in-Java）"><a href="#Java编程思想（Thinking-in-Java）" class="headerlink" title="Java编程思想（Thinking in Java）"></a>Java编程思想（Thinking in Java）</h3><p><strong>Fundamental</strong><br>将这本书划为Fundamental良心上有点过不去，虽被认作是适合初学入门的指南，实际亦有深奥的部分，或许是为了呼应标题的编程思想。即使开发了两年再看仍有收获，相当于将语言的脉络了一遍。另外亦有容器、泛型等主题的深入研究<br>如果要说有什么缺点的话，就是里面的部分内容对于Java新版本（Java 8, Java 9）已经不再适用了，权当了解</p><h3 id="精通正则表达式（Mastering-Regular-Expression）"><a href="#精通正则表达式（Mastering-Regular-Expression）" class="headerlink" title="精通正则表达式（Mastering Regular Expression）"></a>精通正则表达式（Mastering Regular Expression）</h3><p><strong>Advanced</strong><br>屠龙宝刀。前端后端码农非码农，能掌握一些都能显著提升技能，并且深入一层有深入一层的威力。内容包括基本知识与主要Flavor： Perl、Java、.NET、PHP。</p><h3 id="Effective-Java"><a href="#Effective-Java" class="headerlink" title="Effective Java"></a>Effective Java</h3><p><strong>Advanced</strong><br>以中文的价格买到影印的原版，超值，不看原文理解起来总觉得隔了一层。每一个Item由浅及深，不是单纯告诉一个Rule，而是从问题场景，到原始的解决方案，再到精练的方法，不止告诉了你如何解题，还讨论了各类解法的优劣。在一堆教你东西又不帮你搭建知识框架的书里，简直是业界清流</p><h3 id="函数式编程思维（Functional-Thinking）"><a href="#函数式编程思维（Functional-Thinking）" class="headerlink" title="函数式编程思维（Functional Thinking）"></a>函数式编程思维（Functional Thinking）</h3><p><strong>Medium</strong><br>用了四种JVM语言示例，讲述了函数式编程的概念与思想。语言的演化既要考虑到现实需求、硬件资源的支持，还要考虑到对旧有语言特性的兼容</p><h2 id="Thought-amp-Meta-knowledge"><a href="#Thought-amp-Meta-knowledge" class="headerlink" title="Thought &amp; Meta knowledge"></a>Thought &amp; Meta knowledge</h2><h3 id="软件随想录·卷1（Joel-on-Software）"><a href="#软件随想录·卷1（Joel-on-Software）" class="headerlink" title="软件随想录·卷1（Joel on Software）"></a>软件随想录·卷1（Joel on Software）</h3><h3 id="软件随想录·卷2（More-Joel-on-Software）"><a href="#软件随想录·卷2（More-Joel-on-Software）" class="headerlink" title="软件随想录·卷2（More Joel on Software）"></a>软件随想录·卷2（More Joel on Software）</h3><p><strong>Fundamental</strong><br>作者本人的博客集。从项目管理的小细节到公司的大战略，还有手把手教你运营软件公司，应有尽有。普通码农不会想到的问题和没有机会遇到的事情</p><h3 id="黑客与画家"><a href="#黑客与画家" class="headerlink" title="黑客与画家"></a>黑客与画家</h3><p><strong>Fundamental</strong><br>又是大佬的随笔集，听大佬讲过去的故事。。。另外Lisp大法好</p><h3 id="高效能人士的七个习惯"><a href="#高效能人士的七个习惯" class="headerlink" title="高效能人士的七个习惯"></a>高效能人士的七个习惯</h3><p><strong>Medium</strong><br>习惯都好，按需择用，重在实行</p><h3 id="人类简史-从动物到上帝"><a href="#人类简史-从动物到上帝" class="headerlink" title="人类简史 - 从动物到上帝"></a>人类简史 - 从动物到上帝</h3><h3 id="未来简史-从智人到智神"><a href="#未来简史-从智人到智神" class="headerlink" title="未来简史 - 从智人到智神"></a>未来简史 - 从智人到智神</h3><p><strong>Medium</strong><br>架构宏大，角度奇特，不专注于历史中的事件与人物，转而挖掘历史进程中的浪潮与脉络。未来简史则对历史抽丝剥茧，由此探讨人类的未来，科技将与人类共同进化。回顾历史是为了帮助我们认识现在，预测未来是为了了解我们的选择将引向怎样的新世界</p><h3 id="枪炮、病菌与钢铁"><a href="#枪炮、病菌与钢铁" class="headerlink" title="枪炮、病菌与钢铁"></a>枪炮、病菌与钢铁</h3><p><strong>Advanced</strong><br>偏学术。宏大的历史进程,感受到了两点：一是冥冥中自有天定,各种族或文明的命运似乎在史前就有了定数；二是一方水土养一方人，人的性格和命运意识离不开地理的深远影响。可以选择感兴趣的主题来看，比如中国是怎样成为中国人的中国，国家是如何变得贫穷或富有</p><h3 id="如何变得有思想"><a href="#如何变得有思想" class="headerlink" title="如何变得有思想"></a>如何变得有思想</h3><p><strong>Fundamental</strong><br>阮一峰的博客文集。跟IT关系不大，权当拓展</p><h3 id="一网打尽（The-Everything-Store）"><a href="#一网打尽（The-Everything-Store）" class="headerlink" title="一网打尽（The Everything Store）"></a>一网打尽（The Everything Store）</h3><p><strong>Fundamental</strong><br>貌似也叫万货商店。贝佐斯与亚马逊的传记。可看可不看</p><h3 id="天年"><a href="#天年" class="headerlink" title="天年"></a>天年</h3><p><strong>Medium</strong><br>偶尔看看科幻开开脑洞，然而新出的长篇难得有经典。虽有小疵，收尾仓促，不掩其瑜。漫步银河是真实的星空，太阳系前行的路上也是人类真实的末日。期待续篇</p><h3 id="三体X·观想之宙"><a href="#三体X·观想之宙" class="headerlink" title="三体X·观想之宙"></a>三体X·观想之宙</h3><p><strong>Fundamental</strong><br>不要买，买三体就好</p><h3 id="技术元素"><a href="#技术元素" class="headerlink" title="技术元素"></a>技术元素</h3><h3 id="科技想要什么"><a href="#科技想要什么" class="headerlink" title="科技想要什么"></a>科技想要什么</h3><h3 id="新经济新规则"><a href="#新经济新规则" class="headerlink" title="新经济新规则"></a>新经济新规则</h3><p><strong>Fundamental</strong><br>一千铁粉、科技体与生物、进化与发明发现的必然与偶然。不过感觉始终无法超越《失控》巅峰</p><h3 id="Learn-more-study-less"><a href="#Learn-more-study-less" class="headerlink" title="Learn more study less"></a>Learn more study less</h3><p><strong>Medium</strong><br>A useful guidance for acquiring knowledge effectively and more importantly, to absorb the knowledge as your own idea. Build concepts from modules, and build connections to form a web of knowledge. Learn for real knowledge, not for the illusion that I’m studying.<br>以前总觉得脑子不好使，现在也可以说是学习方法不好使了。笔记（整理思维而非知识）、实践（理解内涵而非行为）都很重要，更重要的是让知识生根（联结、建模、索引）和发芽（融合、激发、串联）</p><h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h2><ol><li><p>元知识的重要性<br>工欲善其事必先利其器<br>Learn how to learn </p></li><li><p>读原版书/文档，至少知道常用概念对应的英文<br>读得多点速度和理解会提升，不过毕竟不是母语，够用就好，也可以进行Speed Reading的练习提速<br>原版书太贵，有电子版的配合Kindle使用也能接受，就是对主动性要求更高</p></li><li><p>Selection &amp; priority<br>精力有限，合理安排，不懂先跳过</p></li><li><p>Learning the rules and learn when to break them<br>Also learn the context of rule and why we need them<br>学习模式而不止于模式本身</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Architecture-amp-Design&quot;&gt;&lt;a href=&quot;#Architecture-amp-Design&quot; class=&quot;headerlink&quot; title=&quot;Architecture &amp;amp; Design&quot;&gt;&lt;/a&gt;Architecture &amp;amp; Design&lt;/h2&gt;&lt;h3 id=&quot;微服务设计（Building-Microservices）&quot;&gt;&lt;a href=&quot;#微服务设计（Building-Microservices）&quot; class=&quot;headerlink&quot; title=&quot;微服务设计（Building Microservices）&quot;&gt;&lt;/a&gt;微服务设计（Building Microservices）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Medium&lt;/strong&gt;&lt;br&gt;简单了解微服务的建模、集成、测试、部署和监控。为毛只能说是简单了解？因为不被项目操练都不好意思说深入。。。&lt;/p&gt;
&lt;h3 id=&quot;设计模式-Design-Pattern&quot;&gt;&lt;a href=&quot;#设计模式-Design-Pattern&quot; class=&quot;headerlink&quot; title=&quot;设计模式(Design Pattern)&quot;&gt;&lt;/a&gt;设计模式(Design Pattern)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Advanced&lt;/strong&gt;&lt;br&gt;面向对象的内功心法。初始还是看Head First系列易懂，但是要深入也离不开这本书的提纲挈领。有时间慢慢深入看&lt;/p&gt;
    
    </summary>
    
    
      <category term="Annual Review" scheme="http://yoursite.com/tags/Annual-Review/"/>
    
  </entry>
  
  <entry>
    <title>Build your own blog on CentOS, based on Hexo + Next</title>
    <link href="http://yoursite.com/2017/11/02/Build-your-own-blog-on-CentOS-based-on-Hexo-Next/"/>
    <id>http://yoursite.com/2017/11/02/Build-your-own-blog-on-CentOS-based-on-Hexo-Next/</id>
    <published>2017-11-02T02:21:00.000Z</published>
    <updated>2017-12-25T11:54:38.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Prepare-environment"><a href="#Prepare-environment" class="headerlink" title="Prepare environment"></a>Prepare environment</h2><h3 id="Add-yum-repo"><a href="#Add-yum-repo" class="headerlink" title="Add yum repo"></a>Add yum repo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y gcc-c++ make</span></span><br><span class="line"><span class="comment"># curl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Install-node-and-npm"><a href="#Install-node-and-npm" class="headerlink" title="Install node and npm"></a>Install node and npm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install nodejs</span></span><br></pre></td></tr></table></figure><h3 id="Install-git"><a href="#Install-git" class="headerlink" title="Install git"></a>Install git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install git</span></span><br></pre></td></tr></table></figure><h3 id="Validate-installation"><a href="#Validate-installation" class="headerlink" title="Validate installation"></a>Validate installation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># node -v</span></span><br><span class="line"><span class="comment"># npm -v </span></span><br><span class="line"><span class="comment"># git --version</span></span><br></pre></td></tr></table></figure><h2 id="Hexo-site"><a href="#Hexo-site" class="headerlink" title="Hexo site"></a>Hexo site</h2><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="Create-and-init-your-site"><a href="#Create-and-init-your-site" class="headerlink" title="Create and init your site"></a>Create and init your site</h3><p>Creating your site in your own folder</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p><em>Mind the path when run npm install cmd</em></p><h3 id="Site-folder"><a href="#Site-folder" class="headerlink" title="Site folder"></a>Site folder</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml     # Configuration of site(!!)</span><br><span class="line">├── package.json    # npm installed packages</span><br><span class="line">├── scaffolds       # template files</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts     # Draft pages, omit</span><br><span class="line">|   └── _posts      # Website original pages</span><br><span class="line">└── themes          # Website theme</span><br></pre></td></tr></table></figure><p>List generated files to check result</p><h3 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate     <span class="comment"># Generate static files</span></span><br><span class="line">$ hexo server       <span class="comment"># Start server, default port 4000</span></span><br></pre></td></tr></table></figure><p>Or:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g            <span class="comment"># In short</span></span><br><span class="line">$ hexo s -p &lt;port&gt;  <span class="comment"># In short, specify port</span></span><br></pre></td></tr></table></figure><h3 id="First-blog"><a href="#First-blog" class="headerlink" title="First blog"></a>First blog</h3><p>Create a new blog(in markdown format), if title contains white space, please use quotes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &lt;titile&gt;</span><br></pre></td></tr></table></figure><p>It will create a new post with basic tags in path <folder>/source/_post</folder></p><p><em>Mind: no need to restart server after new/delete/modify posts</em></p><h2 id="One-more-step-further"><a href="#One-more-step-further" class="headerlink" title="One more step further"></a>One more step further</h2><h3 id="Common-cmd"><a href="#Common-cmd" class="headerlink" title="Common cmd"></a>Common cmd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new draft &lt;title&gt;    <span class="comment"># Create a new draft(like private posts)</span></span><br><span class="line">$ hexo publish &lt;filename&gt;   <span class="comment"># Publish drafts</span></span><br><span class="line"></span><br><span class="line">$ hexo clean    <span class="comment"># Clean cache and static files</span></span><br><span class="line">$ hexo deploy   <span class="comment"># deploy the site</span></span><br><span class="line"></span><br><span class="line">$ hexo list post/page/tag/category  <span class="comment"># List types</span></span><br></pre></td></tr></table></figure><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Defines variables of post</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span>          <span class="comment"># Title of post(may differ from filename)</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span>    <span class="comment"># Create date</span></span><br><span class="line"><span class="attr">tags:</span>                       <span class="comment"># Tags of post, in YAML format</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tag0</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tag1</span></span><br><span class="line"><span class="attr">categories:</span>                 <span class="comment"># Categories of post, in YAML format</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">API</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Guide</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="Multi-language-support"><a href="#Multi-language-support" class="headerlink" title="Multi-language support"></a>Multi-language support</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">new_post_name: :lang/:title.md</span><br><span class="line">permalink: :lang/:title/</span><br></pre></td></tr></table></figure><p>When you create a new post, the post will be saved to:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;Hello World&quot; --lang tw</span><br><span class="line"># =&gt; source/_posts/tw/Hello-World.md</span><br></pre></td></tr></table></figure><p>and the URL will be:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></table></figure><h2 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h2><h3 id="New-theme"><a href="#New-theme" class="headerlink" title="New theme"></a>New theme</h3><p>Recommend <em>next</em>, or you can find other themes instead</p><p>Clone new theme to website folder</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>Enable this theme in site <folder>/_config.yml</folder></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><h3 id="Config-theme"><a href="#Config-theme" class="headerlink" title="Config theme"></a>Config theme</h3><p>Use <em>next</em> as example, others may be found on their website</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span>               <span class="comment"># Set language</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">[URL]</span> <span class="string">or</span> <span class="string">under</span> <span class="string">source/</span>  <span class="comment"># Set your own avata</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">[URL]</span>                  <span class="comment"># Use your own favicon</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">&lt;nickname&gt;</span>              <span class="comment"># Set your nickname, shown on page</span></span><br></pre></td></tr></table></figure><h2 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h2><p>Some common plugins may enhance your website</p><blockquote><p><a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a> Count total words, minutes to read</p><p><a href="https://github.com/jaredly/hexo-admin" target="_blank" rel="noopener">hexo-admin</a> Provide admin pages to manage hexo site</p><p><a href="https://github.com/flashlab/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> Index pages and provide local search</p></blockquote><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo Startup Guide</a><br><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next Theme Getting Started</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Prepare-environment&quot;&gt;&lt;a href=&quot;#Prepare-environment&quot; class=&quot;headerlink&quot; title=&quot;Prepare environment&quot;&gt;&lt;/a&gt;Prepare environment&lt;/h2&gt;&lt;h3 id=&quot;Add-yum-repo&quot;&gt;&lt;a href=&quot;#Add-yum-repo&quot; class=&quot;headerlink&quot; title=&quot;Add yum repo&quot;&gt;&lt;/a&gt;Add yum repo&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# yum install -y gcc-c++ make&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# curl -sL https://rpm.nodesource.com/setup_6.x | sudo -E bash -&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Linux Command Line Basics</title>
    <link href="http://yoursite.com/2017/08/17/Linux_Command_Line__Basics/"/>
    <id>http://yoursite.com/2017/08/17/Linux_Command_Line__Basics/</id>
    <published>2017-08-16T16:00:00.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-Command-Line-Basics"><a href="#Linux-Command-Line-Basics" class="headerlink" title="Linux Command Line Basics"></a>Linux Command Line Basics</h1><h2 id="System-Directory-Structure"><a href="#System-Directory-Structure" class="headerlink" title="System Directory Structure"></a>System Directory Structure</h2><p>Case sensitive<br>Root path: / </p><a id="more"></a><table><thead><tr><th>Path</th><th style="text-align:center">Detail</th></tr></thead><tbody><tr><td>/bin</td><td style="text-align:center">executable commands(for all users)</td></tr><tr><td>/sbin</td><td style="text-align:center">super bin (for root)</td></tr><tr><td>/boot</td><td style="text-align:center">startup, kernel</td></tr><tr><td>/dev</td><td style="text-align:center">devices (files)</td></tr><tr><td>/etc</td><td style="text-align:center">config files, pure text files</td></tr><tr><td>/home</td><td style="text-align:center">user home dirctory</td></tr><tr><td>/root</td><td style="text-align:center">root user home</td></tr><tr><td>/lib</td><td style="text-align:center">library files</td></tr><tr><td>/opt</td><td style="text-align:center">large software</td></tr><tr><td>/proc</td><td style="text-align:center">process</td></tr><tr><td>/sys</td><td style="text-align:center">hardware info</td></tr><tr><td>/tmp</td><td style="text-align:center">temporary</td></tr><tr><td>/usr</td><td style="text-align:center">user application</td></tr><tr><td>/var</td><td style="text-align:center">variable, e.g log</td></tr><tr><td>/media</td><td style="text-align:center">media</td></tr><tr><td>/mnt</td><td style="text-align:center">mount</td></tr></tbody></table><h2 id="File-Operations"><a href="#File-Operations" class="headerlink" title="File Operations"></a>File Operations</h2><h3 id="Create-New-File"><a href="#Create-New-File" class="headerlink" title="Create New File"></a>Create New File</h3><pre><code>$ &gt; newfile / &gt;&gt; new file$ touch newfile$ cat &gt; file</code></pre><h3 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h3><pre><code>$ rm -rf *</code></pre><h3 id="Mofify"><a href="#Mofify" class="headerlink" title="Mofify"></a>Mofify</h3><p>Modify access time:</p><pre><code>$ touch filename</code></pre><p>Modify content:</p><pre><code>$ vi$ vim$ nano</code></pre><h3 id="Move-Copy-Rename"><a href="#Move-Copy-Rename" class="headerlink" title="Move, Copy, Rename"></a>Move, Copy, Rename</h3><pre><code>$ mv src dest$ cp src dest</code></pre><h2 id="File-Mode-Permission"><a href="#File-Mode-Permission" class="headerlink" title="File Mode/Permission"></a>File Mode/Permission</h2><h3 id="Permission-Groups"><a href="#Permission-Groups" class="headerlink" title="Permission Groups"></a>Permission Groups</h3><p>u: user<br>g: group<br>o: other<br>a: all users</p><h3 id="Permission-Types"><a href="#Permission-Types" class="headerlink" title="Permission Types"></a>Permission Types</h3><p>r: read, 4<br>w: write, 2<br>x: execute, 1  </p><h3 id="Permissions-for-Directory"><a href="#Permissions-for-Directory" class="headerlink" title="Permissions for Directory"></a>Permissions for Directory</h3><p>r: read structure<br>w: modify structure<br>x: access directory(as working directory)</p><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><pre><code>$ chmod/ll$ lsattr/chattr$ umask </code></pre><h2 id="Directory-Operations"><a href="#Directory-Operations" class="headerlink" title="Directory Operations"></a>Directory Operations</h2><h3 id="Change-Directory"><a href="#Change-Directory" class="headerlink" title="Change Directory"></a>Change Directory</h3><pre><code>$ cd$ pwd</code></pre><p>Special notation:<br>. present directory<br>.. parent directory<br>~ home of present user<br>~user home of this user<br>/ root<br>- last working directory  </p><h3 id="Create-path"><a href="#Create-path" class="headerlink" title="Create path"></a>Create path</h3><pre><code>$ mkdir [-P] path</code></pre><p>With -P option, create parent path if not exist. </p><h3 id="Remove-Directory"><a href="#Remove-Directory" class="headerlink" title="Remove Directory"></a>Remove Directory</h3><pre><code>$ rmdir [-P] path</code></pre><h2 id="Command-Operations"><a href="#Command-Operations" class="headerlink" title="Command Operations"></a>Command Operations</h2><p>View previous commands(of present user):  </p><pre><code>$ history</code></pre><p>Execute previous command:  </p><pre><code>$ !num$ !!</code></pre><p>Search command:  </p><pre><code>Ctrl + R</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Linux-Command-Line-Basics&quot;&gt;&lt;a href=&quot;#Linux-Command-Line-Basics&quot; class=&quot;headerlink&quot; title=&quot;Linux Command Line Basics&quot;&gt;&lt;/a&gt;Linux Command Line Basics&lt;/h1&gt;&lt;h2 id=&quot;System-Directory-Structure&quot;&gt;&lt;a href=&quot;#System-Directory-Structure&quot; class=&quot;headerlink&quot; title=&quot;System Directory Structure&quot;&gt;&lt;/a&gt;System Directory Structure&lt;/h2&gt;&lt;p&gt;Case sensitive&lt;br&gt;Root path: / &lt;/p&gt;
    
    </summary>
    
      <category term="学习记录" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Setup SFTP Server on Centos 6</title>
    <link href="http://yoursite.com/2017/07/26/Setup_SFTP_Server/"/>
    <id>http://yoursite.com/2017/07/26/Setup_SFTP_Server/</id>
    <published>2017-07-25T16:00:00.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Set-SFTP-Server"><a href="#Set-SFTP-Server" class="headerlink" title="Set SFTP Server"></a>Set SFTP Server</h1><p>Env: Centos 6</p><h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Add-goup-user-and-permission"><a href="#Add-goup-user-and-permission" class="headerlink" title="Add goup, user and permission"></a>Add goup, user and permission</h3><pre><code># create a group for SFTP[root@dlp ~]# groupadd sftp_users # apply to a user &quot;mysftp&quot; for SFTP only[root@dlp ~]# usermod -G sftp_users mysftp# usermod bin(require ?)[root@dlp ~]# usermod -s /bin/false mysftp# chrooted home directory[root@dlp ~]# chown root:root mysftp# set permissions for home directory[root@dlp ~]# chmod 755 mysftp</code></pre><a id="more"></a><h3 id="Update-sshd-config-file"><a href="#Update-sshd-config-file" class="headerlink" title="Update sshd config file"></a>Update sshd config file</h3><pre><code>[root@dlp ~]# vim /etc/ssh/sshd_config# line 132: comment out and add a line like below#Subsystem sftp /usr/libexec/openssh/sftp-serverSubsystem sftp internal-sftp -f AUTH -l VERBOSE# add follows to the endMatch Group sftp_users  X11Forwarding no  AllowTcpForwarding no  ChrootDirectory %h  ForceCommand internal-sftp[root@dlp ~]# /etc/rc.d/init.d/sshd restart # and make sure belowPasswordAuthentication yesUsePAM yes</code></pre><h3 id="Check-connection"><a href="#Check-connection" class="headerlink" title="Check connection"></a>Check connection</h3><pre><code>[root@localhost ~]# sftp mysftp@10.200.159.83Connecting to 10.200.159.83...mysftp@10.200.159.83&apos;s password: sftp&gt; lsdownloads  uploadssftp&gt; llInvalid command.sftp&gt; ls -ldrwxr-xr-x2 004096 Jul 10 00:22 downloadsdrwxr-xr-x2 004096 Jul 10 00:22 uploadssftp&gt; </code></pre><h3 id="Mind-SELinux-and-chrooted-SFTP"><a href="#Mind-SELinux-and-chrooted-SFTP" class="headerlink" title="Mind SELinux and chrooted SFTP"></a>Mind SELinux and chrooted SFTP</h3><h2 id="Possible-error"><a href="#Possible-error" class="headerlink" title="Possible error"></a>Possible error</h2><blockquote><p>SFTP Error - Couldn’t read packet: Connection reset by peer</p><p>Write failed: Broken pipe Couldn’t read packet: Connection reset by peer</p><p>sftp Couldn’t get handle: Permission denied</p></blockquote><p>Check configuration.</p><blockquote><p>Network error: Software caused connection abort - FTP - FileZilla</p></blockquote><p>Do NOT chmod to 777/775</p><blockquote><p>Couldn’t create directory: Permission denied<br>(Cannot upload file/create dir)</p></blockquote><pre><code>[root@dlp ~]# setsebool -P ssh_chroot_rw_homedirs on</code></pre><h2 id="Java-client"><a href="#Java-client" class="headerlink" title="Java client"></a>Java client</h2><p><strong>jsch</strong>:<br>most common, <a href="http://www.jcraft.com/jsch/" target="_blank" rel="noopener">jsch site</a><br><strong>Apache Common VFS</strong>:<br>less doc and demo, based on jsch. If you need to handle multiple protocols, this is recommended.<br><a href="https://commons.apache.org/proper/commons-vfs/" target="_blank" rel="noopener">Apache Commons Virtual File System Site</a><br><a href="https://github.com/lucifer7/java-study/blob/master/src/main/java/util/VFSProxy.java" target="_blank" rel="noopener">VFS Proxy</a><br><strong>sshj</strong><br>…</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Set-SFTP-Server&quot;&gt;&lt;a href=&quot;#Set-SFTP-Server&quot; class=&quot;headerlink&quot; title=&quot;Set SFTP Server&quot;&gt;&lt;/a&gt;Set SFTP Server&lt;/h1&gt;&lt;p&gt;Env: Centos 6&lt;/p&gt;
&lt;h2 id=&quot;Step&quot;&gt;&lt;a href=&quot;#Step&quot; class=&quot;headerlink&quot; title=&quot;Step&quot;&gt;&lt;/a&gt;Step&lt;/h2&gt;&lt;h3 id=&quot;Add-goup-user-and-permission&quot;&gt;&lt;a href=&quot;#Add-goup-user-and-permission&quot; class=&quot;headerlink&quot; title=&quot;Add goup, user and permission&quot;&gt;&lt;/a&gt;Add goup, user and permission&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;# create a group for SFTP
[root@dlp ~]# groupadd sftp_users 
# apply to a user &amp;quot;mysftp&amp;quot; for SFTP only
[root@dlp ~]# usermod -G sftp_users mysftp
# usermod bin(require ?)
[root@dlp ~]# usermod -s /bin/false mysftp
# chrooted home directory
[root@dlp ~]# chown root:root mysftp
# set permissions for home directory
[root@dlp ~]# chmod 755 mysftp
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="VM配置" scheme="http://yoursite.com/categories/VM%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="S/FTP" scheme="http://yoursite.com/tags/S-FTP/"/>
    
  </entry>
  
  <entry>
    <title>Setup FTP Server on Centos 6</title>
    <link href="http://yoursite.com/2017/07/26/Setup_FTP_Server/"/>
    <id>http://yoursite.com/2017/07/26/Setup_FTP_Server/</id>
    <published>2017-07-25T16:00:00.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Set-FTP-Server"><a href="#Set-FTP-Server" class="headerlink" title="Set FTP Server"></a>Set FTP Server</h1><p>Env: CentOS 6</p><h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Install-vsftpd-server-and-ftp-client"><a href="#Install-vsftpd-server-and-ftp-client" class="headerlink" title="Install vsftpd(server) and ftp(client)"></a>Install vsftpd(server) and ftp(client)</h3><pre><code>[root@localhost ~]# sudo yum install -y vsftpd[root@localhost ~]# sudo yum install -y ftp</code></pre><a id="more"></a><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>vsftpd configuration file is /etc/vsftpd/vsftpd.conf, make sure options are set as follow:</p><pre><code>anonymous_enable=NOlocal_enable=YES# not allowed to visit other part of serverchroot_local_user=YES</code></pre><h3 id="Startup"><a href="#Startup" class="headerlink" title="Startup"></a>Startup</h3><pre><code>[root@localhost ~]# service vsftpd restart</code></pre><h1 id="Extend-to-FTPS"><a href="#Extend-to-FTPS" class="headerlink" title="Extend to FTPS"></a>Extend to FTPS</h1><p>vsftpd may use SSL/TLS and serves as FTPS server.</p><h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step"></a>Step</h2><h3 id="Create-certificate-and-key-file"><a href="#Create-certificate-and-key-file" class="headerlink" title="Create certificate and key file"></a>Create certificate and key file</h3><pre><code>[root@localhost ~]# mkdir /etc/ssl/private[root@localhost ~]# openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout /etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem</code></pre><h3 id="Config-key-file-to-vsftpd"><a href="#Config-key-file-to-vsftpd" class="headerlink" title="Config key file to vsftpd"></a>Config key file to vsftpd</h3><p>Open /etc/vsftpd/vsftpd.conf, set certificate file options:</p><pre><code># SSL configuration# RSArsa_cert_file=/etc/ssl/private/vsftpd.pemrsa_private_key_file=/etc/ssl/private/vsftpd.pem</code></pre><h3 id="Enable-SSL-TLS"><a href="#Enable-SSL-TLS" class="headerlink" title="Enable SSL/TLS"></a>Enable SSL/TLS</h3><pre><code># SSLssl_enable=YESallow_anon_ssl=NOforce_local_data_ssl=YESforce_local_logins_ssl=YES# TLSssl_tlsv1=YESssl_sslv2=NOssl_sslv3=NOrequire_ssl_reuse=NOssl_ciphers=HIGH</code></pre><h3 id="Create-user-for-access"><a href="#Create-user-for-access" class="headerlink" title="Create user for access"></a>Create user for access</h3><p>Similiar like user creation in SFTP server setup.</p><h2 id="Java-Client"><a href="#Java-Client" class="headerlink" title="Java Client"></a>Java Client</h2><p><strong>Apache Commons Net</strong><br><a href="https://commons.apache.org/proper/commons-net/" target="_blank" rel="noopener">Apache Commons Net Site</a><br>Use <em>FTPClient</em> to connect FTP server, and use <em>FTPSClient</em> to connect FTPS server.</p><p><strong>Apache Common VFS</strong>:<br>See SFTP server setup.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Set-FTP-Server&quot;&gt;&lt;a href=&quot;#Set-FTP-Server&quot; class=&quot;headerlink&quot; title=&quot;Set FTP Server&quot;&gt;&lt;/a&gt;Set FTP Server&lt;/h1&gt;&lt;p&gt;Env: CentOS 6&lt;/p&gt;
&lt;h2 id=&quot;Step&quot;&gt;&lt;a href=&quot;#Step&quot; class=&quot;headerlink&quot; title=&quot;Step&quot;&gt;&lt;/a&gt;Step&lt;/h2&gt;&lt;h3 id=&quot;Install-vsftpd-server-and-ftp-client&quot;&gt;&lt;a href=&quot;#Install-vsftpd-server-and-ftp-client&quot; class=&quot;headerlink&quot; title=&quot;Install vsftpd(server) and ftp(client)&quot;&gt;&lt;/a&gt;Install vsftpd(server) and ftp(client)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;[root@localhost ~]# sudo yum install -y vsftpd
[root@localhost ~]# sudo yum install -y ftp
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="VM配置" scheme="http://yoursite.com/categories/VM%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="S/FTP" scheme="http://yoursite.com/tags/S-FTP/"/>
    
  </entry>
  
  <entry>
    <title>CPU and Cache</title>
    <link href="http://yoursite.com/2017/05/23/CPU-and-Cache/"/>
    <id>http://yoursite.com/2017/05/23/CPU-and-Cache/</id>
    <published>2017-05-23T08:56:56.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Linux-perf"><a href="#Linux-perf" class="headerlink" title="Linux perf"></a>Linux perf</h3><p>软件性能诊断工具<br>Use PMU, tracepoint and special counter in kernel</p><h3 id="Terms"><a href="#Terms" class="headerlink" title="Terms"></a>Terms</h3><ol><li>硬件并行设计</li></ol><p>CPU 流水线 | processor pipeline<br>超标量 Superscalar<br>乱序执行 reordering ?<br>Based：相邻指令不依赖</p><a id="more"></a><ol><li>分支预测 branch predict</li></ol><p>预测最可能的下条指令<br>对switch case效果不佳</p><ol><li>硬件中加入 PMU</li></ol><p>performance monitor unit<br>允许软件对某种硬件事件设置 counter， 超过预设值时中断</p><ol><li>Trackpoint</li></ol><p>散落在内核中的hook, 可被 trace/debug 工具使用，如 perf</p><h3 id="Usages"><a href="#Usages" class="headerlink" title="Usages"></a>Usages</h3><blockquote><p>perf list<br>list all monitor event</p></blockquote><p>Three types:</p><ol><li>Hardware event, generated by PMU, eg. cache miss</li><li>Software event, generated by kernel, eg. context switch, tick</li><li>Tracepoint event, triggered by static tracepoint in kernel, eg. counter for slab 分配器</li></ol><blockquote><p>perf stat<br>provide overview for program running detail</p></blockquote><p>CPU bound 型 与 IO bound 型，调优不同</p><h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><h4 id="1-CPU-affinity"><a href="#1-CPU-affinity" class="headerlink" title="1. CPU affinity"></a>1. CPU affinity</h4><p>CPU亲缘性 (soft and hard)<br>Cause: most popular architecture for server is SMP<br>and every CPU has its own cache (L1, L2)<br>TO: avoid L1/L2 cache invalid(失效) caused by context switch</p><h4 id="2-Cache-barrier"><a href="#2-Cache-barrier" class="headerlink" title="2. Cache barrier"></a>2. Cache barrier</h4><p>A memory barrier, is a type of barrier instruction, which causes a CPU or <em>Compiler</em> to enforce an ordering constraint on memory operations issued before and after the barrier instruction.<br>一旦内存数据被推送到缓存，就会有消息协议来确保所有的缓存会对所有的共享数据同步并保持一致。这个使内存数据对CPU核可见的技术被称为内存屏障或内存栅栏<br>volatile类型 写入之后插入store屏障，读取之前插入 load 屏障<br><a href="https://sstompkins.wordpress.com/2011/04/12/why-memory-barrier%EF%BC%9F/" target="_blank" rel="noopener">Why Memory Barrier？</a></p><h3 id="Cache"><a href="#Cache" class="headerlink" title="Cache"></a>Cache</h3><h4 id="1-Cache-coherency-缓存一致性"><a href="#1-Cache-coherency-缓存一致性" class="headerlink" title="1. Cache coherency 缓存一致性"></a>1. Cache coherency 缓存一致性</h4><blockquote><p>基本定律：在任意时刻，任意级别缓存中的缓存段的内容，等同于它对应的内存中的内容。<br>write through 直写： 写入下级缓存<br>write back 回写：仅修改本级缓存中数据，并标记为缓存段(Line)为脏段，触发回写<br>优点：回写效率更高，过滤对同一地址的反复写操作<br>回写定律：当所有的脏段被回写后，任意级别缓存中的缓存段的内容，等同于它对应的内存中的内容。</p></blockquote><p>Ref: 缓存关联性（cache associativity），缓存组（cache sets），使用分配写（write-allocate）还是非分配写（上面我描述的直写是和分配写相结合的，而回写是和非分配写相结合的），非对齐的访问（unaligned access），基于虚拟地址的缓存。。。</p><h4 id="2-缓存一致性协议-Coherency-protocols"><a href="#2-缓存一致性协议-Coherency-protocols" class="headerlink" title="2. 缓存一致性协议  Coherency protocols"></a>2. 缓存一致性协议  Coherency protocols</h4><ul><li>解决多核心的多组缓存同步问题</li><li>窥探协议 snooping</li><li>use by most device</li><li>基于目录的协议 directory-based</li></ul><h4 id="3-Buffer-vs-Cache"><a href="#3-Buffer-vs-Cache" class="headerlink" title="3. Buffer vs. Cache"></a>3. Buffer vs. Cache</h4><p>Buffer：一般用于写操作，可以称之为写缓冲<br>Cache：一般用于读操作，可以称之为读缓存</p><h4 id="4-Web-缓存体系"><a href="#4-Web-缓存体系" class="headerlink" title="4. Web 缓存体系"></a>4. Web 缓存体系</h4><p><img src="http://mmbiz.qpic.cn/mmbiz/yNKv1P4Q9eVhezt0HiaXDfWR8ZZictibjtW0q3HHLdWQFEcPJcvbP0GXwrp1rgibUNEQcuRDCqjKECGprGNHv5CHeg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="Web缓存知识体系"><br>1.1.2 基于目录的协议 directory-based</p><h3 id="Barrier-Visibility-and-Mutex"><a href="#Barrier-Visibility-and-Mutex" class="headerlink" title="Barrier, Visibility and Mutex"></a>Barrier, Visibility and Mutex</h3><h4 id="Terms-1"><a href="#Terms-1" class="headerlink" title="Terms"></a>Terms</h4><ul><li>可见性：<br>共享变量值，一个线程修改，其他能看见</li><li>共享变量：<br>一个变量在多个线程的工作内存中都有副本</li></ul><h4 id="JMM（Java-Memory-Model）Java内存模型"><a href="#JMM（Java-Memory-Model）Java内存模型" class="headerlink" title="JMM（Java Memory Model）Java内存模型"></a>JMM（Java Memory Model）Java内存模型</h4><p>线程对共享变量的操作只能在工作内存中进行，不能直接读取主存<br><img src="https://segmentfault.com/img/bVrbuK" alt="JMM 内存模型"><br>可见性的实现：synchronize and volatile<br>synchronized 两点要求：</p><ol><li>unlock之前，共享变量必须刷新至主存</li><li>加锁时重新加载主存中的共享变量</li></ol><h5 id="Workflow-of-lock-and-unlock："><a href="#Workflow-of-lock-and-unlock：" class="headerlink" title="Workflow of lock and unlock："></a>Workflow of lock and unlock：</h5><ol><li>获得互斥锁</li><li>清空工作内存</li><li>从主存拷贝变量的最新副本到工作内存</li><li>执行代码</li><li>更新后的变量刷新到主存</li><li>释放互斥锁<br>Q: 未更改的变量是否一同刷新？</li></ol><h5 id="重排序"><a href="#重排序" class="headerlink" title="重排序"></a>重排序</h5><p>代码书写顺序与实际执行顺序不同，可能的优化：</p><ol><li>编译器优化重排序（编译器优化）</li><li>指令级并行重排序（处理器优化）</li><li>内存系统重排序（处理器优化）<br>可能会导致：<br>某些变量的操作会在后面的变量之前执行，比如终止条件后获取不到最终的结果值</li></ol><p>解决：<br>可用 volatile，即 as-if-serial，程序执行的结果与代码顺序执行的结果一致</p><h4 id="Mutex-互斥机制"><a href="#Mutex-互斥机制" class="headerlink" title="Mutex 互斥机制"></a>Mutex 互斥机制</h4><ol><li>Synchronize<br>when to use:<br>writing a variable might be read by other threads;<br>reading a variable might be written by other threads;<br>both reader and writer must use same monitor lock</li></ol><p>用途：<br>Visibility and mutex</p><h4 id="volatile-and-visibility"><a href="#volatile-and-visibility" class="headerlink" title="volatile and visibility"></a>volatile and visibility</h4><p>volatile 只能保证共享变量的可见性和读写操作的原子性？<br>volatile 原理：<br>volatile 类型的变量，转化为汇编后，增加 lock add1.. 指令, this will cause:</p><ol><li>write present processor cache line back to main memory</li><li>write back action invalidates caches in other processors</li></ol><p>安全地使用 volatile 变量：</p><ol><li><p>对变量的操作不依赖当前值</p><blockquote><p>不满足：count++；count=count+1;<br>满足：Boolean变量，温度值等。</p></blockquote></li><li><p>变量没有包含在其他变量的不变式中</p><blockquote><p> 不满足：不变式，low&lt;up.</p></blockquote></li></ol><h4 id="Atomic-原子性"><a href="#Atomic-原子性" class="headerlink" title="Atomic 原子性"></a>Atomic 原子性</h4><h5 id="CPU原子性实现："><a href="#CPU原子性实现：" class="headerlink" title="CPU原子性实现："></a>CPU原子性实现：</h5><ol><li>总线锁定<br>eg. a thread execute <em>i++</em> on CPU1, will lock bus - communication between memory and other CPU, to ensure other tasks not changing the value of i in memory,<br>but other instructions will not execute during the lock.</li><li>缓存锁定<br>only lock the address of variable in memory, and only allows CPU1 to write back new value, and invalidate the cache in other CPUs</li></ol><h5 id="Java原子性实现"><a href="#Java原子性实现" class="headerlink" title="Java原子性实现"></a>Java原子性实现</h5><p>使用CAS循环</p><p>Reference:<br>TO Read<br><a href="http://blog.csdn.net/gqtcgq/article/details/52330065" target="_blank" rel="noopener">互斥锁和内存可见性</a><br><a href="https://www.securecoding.cert.org/confluence/display/c/CON02-C.+Do+not+use+volatile+as+a+synchronization+primitive" target="_blank" rel="noopener">CON02-C. Do not use volatile as a synchronization primitive</a><br><a href="http://www.rdrop.com/users/paulmck/scalability/paper/whymb.2009.04.05a.pdf" target="_blank" rel="noopener">Memory Barriers: a Hardware View for Software Hackers</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Linux-perf&quot;&gt;&lt;a href=&quot;#Linux-perf&quot; class=&quot;headerlink&quot; title=&quot;Linux perf&quot;&gt;&lt;/a&gt;Linux perf&lt;/h3&gt;&lt;p&gt;软件性能诊断工具&lt;br&gt;Use PMU, tracepoint and special counter in kernel&lt;/p&gt;
&lt;h3 id=&quot;Terms&quot;&gt;&lt;a href=&quot;#Terms&quot; class=&quot;headerlink&quot; title=&quot;Terms&quot;&gt;&lt;/a&gt;Terms&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;硬件并行设计&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;CPU 流水线 | processor pipeline&lt;br&gt;超标量 Superscalar&lt;br&gt;乱序执行 reordering ?&lt;br&gt;Based：相邻指令不依赖&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hardware" scheme="http://yoursite.com/tags/Hardware/"/>
    
      <category term="OS" scheme="http://yoursite.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>Server Architecture</title>
    <link href="http://yoursite.com/2017/05/23/Server-Architecture/"/>
    <id>http://yoursite.com/2017/05/23/Server-Architecture/</id>
    <published>2017-05-23T08:44:00.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Scalable-Computing-Analysis"><a href="#1-Scalable-Computing-Analysis" class="headerlink" title="1. Scalable Computing/Analysis"></a>1. Scalable Computing/Analysis</h3><h4 id="1-1-Three-architecture"><a href="#1-1-Three-architecture" class="headerlink" title="1.1 Three architecture ?"></a>1.1 Three architecture ?</h4><h5 id="1-1-1-Shared-Nothing-versus-Shared-Everything"><a href="#1-1-1-Shared-Nothing-versus-Shared-Everything" class="headerlink" title="1.1.1 Shared-Nothing versus Shared-Everything"></a>1.1.1 Shared-Nothing versus Shared-Everything</h5><ul><li>Patterns for Distributed or Parallel computing</li><li>big problems, break it down, computing unit</li><li>which pattern to use<br>trader-off between compute and communication costs</li></ul><p>MPP?</p><a id="more"></a><h5 id="1-1-2-Shared-Memory"><a href="#1-1-2-Shared-Memory" class="headerlink" title="1.1.2 Shared-Memory"></a>1.1.2 Shared-Memory</h5><ol><li>single machine, multiple processes<br>Apply in:</li></ol><ul><li>GPU-based parallel-computing architecture</li><li>Deep Learning</li></ul><ol><li>multiple machines<br>RDMA (Remote direct memory access)<br>data-center network<br>warehouse-scale computing</li></ol><p>NUMA?</p><h5 id="1-1-3-Shared-Storage"><a href="#1-1-3-Shared-Storage" class="headerlink" title="1.1.3 Shared-Storage"></a>1.1.3 Shared-Storage</h5><ul><li>in 80’s, NFS/DFS/Andrew</li><li>today, SAN/NAS/Virtualized storage</li></ul><h3 id="2-Core-elements-in-architecture"><a href="#2-Core-elements-in-architecture" class="headerlink" title="2. Core elements in architecture"></a>2. Core elements in architecture</h3><p>架构核心要素，思维导图<br><img src="http://images.cnitblog.com/blog/90573/201404/131651286223938.jpg" alt="架构核心五要素"></p><p>Ref Book:<br><a href="https://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/B00F3Z26G8?ie=UTF8&amp;SubscriptionId=AKIAJOMEZLLKFEWYT4PQ&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B00F3Z26G8&amp;linkCode=xm2&amp;tag=z08-23" target="_blank" rel="noopener">大型网站技术架构</a></p><h3 id="3-Server-Architecture"><a href="#3-Server-Architecture" class="headerlink" title="3. Server Architecture"></a>3. Server Architecture</h3><h4 id="3-1-服务器三大体系结构"><a href="#3-1-服务器三大体系结构" class="headerlink" title="3.1 服务器三大体系结构"></a>3.1 服务器三大体系结构</h4><p>Three architecture for business server</p><ol><li>Symmetric Multi-Processing (SMP)  <strong>主流服务器架构</strong></li></ol><p><strong>对称多处理架构</strong>：多个CPU对称工作，无主次或从属关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Share same physical memory, access to any address takes same time</span><br><span class="line">Thus is also called: 一致存储访问结构</span><br><span class="line">Uniform Memory Access (UMA)  </span><br><span class="line">Feature: sharing</span><br><span class="line">Extension: more memory, faster CPU, more CPU, more i/o, more device</span><br><span class="line">Defect: extension limited</span><br><span class="line">Best practice: 2-4 CPUs</span><br></pre></td></tr></table></figure><ol><li>Massively Parallel Processing (MPP)</li></ol><ul><li>海量并行处理结构: 多个SMP服务器（节点）互联而成</li><li>完全无共享结构(Share Nothing)</li><li>Thus：扩展能力最好，目前512个节点，数千个CPU</li></ul><ol><li>Non-Uniform Memory Access (NUMA)</li></ol><ul><li>非一致存储访问结构</li><li>Feature: 多个CPU模块，每个模块多个CPU</li><li>独立内存，I/O</li><li>通过互联模块（eg. crossbar switch) 连接和信息交互</li><li>支持上百个CPU</li><li>Defects：远地内存延时太多</li><li><p>系统性能无法线性增加</p><p>MPP vs. NUMA</p></li></ul><table><thead><tr><th>Criteria</th><th style="text-align:left">MPP</th><th style="text-align:left">NUMA</th></tr></thead><tbody><tr><td>节点互联机制</td><td style="text-align:left">I/O</td><td style="text-align:left">inside same physical server</td></tr><tr><td>内存访问机制</td><td style="text-align:left">access only local</td><td style="text-align:left">access to all, remote delays</td></tr><tr><td>Usage</td><td style="text-align:left">data warehouse, i/o</td><td style="text-align:left">OLTP, little data, fast processing</td></tr></tbody></table><blockquote><p><a href="http://server.51cto.com/sCollege-198840.htm" target="_blank" rel="noopener">服务器三大体系SMP、NUMA、MPP介绍</a></p><p><a href="https://blogs.technet.microsoft.com/dataplatforminsider/2014/07/30/transitioning-from-smp-to-mpp-the-why-and-the-how/" target="_blank" rel="noopener">Transitioning from SMP to MPP, the why and the how</a></p><p><a href="http://www.embedded.com/design/mcus-processors-and-socs/4429496/Multicore-basics" target="_blank" rel="noopener">Multi core basics: AMP and SMP</a></p><p><a href="https://docs.oracle.com/cd/A91202_01/901_doc/rac.901/a89867/pshwarch.htm" target="_blank" rel="noopener">Cluster Hardware Architecture</a></p></blockquote><h4 id="3-2-多核系统三大架构"><a href="#3-2-多核系统三大架构" class="headerlink" title="3.2 多核系统三大架构"></a>3.2 多核系统三大架构</h4><ol><li>SMP</li></ol><ul><li>一个操作系统的实例可以同时管理所有CPU内核，且应用并不绑定某一个内核</li></ul><ol><li>Asymmetric Multi-Processing (AMP)</li></ol><ul><li>非对称多处理架构</li><li>每个CPU内核可能运行一个独立的操作系统或同一操作系统的独立实例（instantiation）</li></ul><p>AMP vs. SMP</p><table><thead><tr><th>Criteria</th><th style="text-align:left">AMP</th><th style="text-align:left">SMP</th></tr></thead><tbody><tr><td>耦合</td><td style="text-align:left">松耦合多CPU系统</td><td style="text-align:left">紧耦合多CPU系统</td></tr><tr><td>OS</td><td style="text-align:left">one CPU, one OS</td><td style="text-align:left">multi CPU, share one OS</td></tr><tr><td>Apply</td><td style="text-align:left">less</td><td style="text-align:left">more</td></tr></tbody></table><ol><li>Bound Multi-Processing (BMP)</li></ol><ul><li>混合多处理架构</li><li>一个操作系统的实例可以同时管理所有CPU内核，但每个应用被锁定于某个指定的核心</li></ul><h4 id="3-3-补充"><a href="#3-3-补充" class="headerlink" title="3.3 补充"></a>3.3 补充</h4><blockquote><p>Seemingly, SMP(UMA), NUMA and MPP refers to CPU and RAM architecture</p><p>And SMP, AMP, BMP refers to CPU and OS architecture</p><p>More on 17-09-29:<br>SMP: multiprocessor computer hardware and software architecture<br>UMA: a shared memory architecture used in parallel computers<br>UMA may use bus-based SMP arch or crossbar switches</p></blockquote><p>Intel 用了很牛的技术  SMT （同步多线程），一个CPU同时可以执行两个线程，如双核CPU可以有4个逻辑处理器</p><p> <strong>SMT(Simultaneous Multi-threading)</strong><br>Def: Permits multiple independent threads to execute <em>simultaneously</em> on the SAME core.<br>Weaving together multiple “threads” on the same core </p><p>SMT v.s. Hyper Threading<br>SMT: an architecture feature of some processors<br>allows multiple thread to issue instructions on each cycle(same time ?)<br>Hyper-Threading is a specific implementation of SMT.</p><h3 id="4-Design-of-System"><a href="#4-Design-of-System" class="headerlink" title="4 Design of System"></a>4 Design of System</h3><h4 id="4-1-Building-block"><a href="#4-1-Building-block" class="headerlink" title="4.1 Building block"></a>4.1 Building block</h4><p><strong>decomposition and combination</strong><br>分解和组合</p><ol><li><p>System bus<br>系统总线<br>separate producer and consumer</p></li><li><p>Routing<br>路由<br>external route: different input –&gt; |dispatch| –&gt; component<br>internal route: service level, eg.consul, way like pattern matching</p></li></ol><p><strong>Mind data</strong><br>Identify its ID before reaching Bus, called data normalization/data encapsulation </p><ol><li><p>Queue<br>A special version of bus + route[optional] + storage  ?<br>amends for the speed collapse of consumer and producer</p><ol><li><p>Pub/Sub<br>An candidate for route<br>Managed by Publisher</p></li><li><p>Protocol<br>To communicate though bus or queue, we need a <strong>protocol</strong> to define behaviour.<br>like an SLA, service level agreement</p></li></ol><h4 id="4-2-vital-services"><a href="#4-2-vital-services" class="headerlink" title="4.2 vital services"></a>4.2 vital services</h4><ol><li><p>sweeping<br>代谢<br>exception close, restart, restore…<br>eg. supervisor/child process in erlang, supervision tree(like nginx)</p></li><li><p>High Availability</p></li><li><p>Security<br>divide into initiative and passive(主动安全与被动安全)<br>Initiative: authentication/authorization + TLS + encrypt + minimum input/output<br>Passive: firewall</p></li></ol></li><li><p>Overdraft protection<br>透支保护<br>auto scaling/back pressure/Service degradation</p></li></ol><p>Reference:<br><a href="http://mp.weixin.qq.com/s?__biz=MzA3NDM0ODQwMw==&amp;mid=207078329&amp;idx=1&amp;sn=14070c2bc5f24af58e951c8a926964e0#rd" target="_blank" rel="noopener">软件设计杂谈</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-Scalable-Computing-Analysis&quot;&gt;&lt;a href=&quot;#1-Scalable-Computing-Analysis&quot; class=&quot;headerlink&quot; title=&quot;1. Scalable Computing/Analysis&quot;&gt;&lt;/a&gt;1. Scalable Computing/Analysis&lt;/h3&gt;&lt;h4 id=&quot;1-1-Three-architecture&quot;&gt;&lt;a href=&quot;#1-1-Three-architecture&quot; class=&quot;headerlink&quot; title=&quot;1.1 Three architecture ?&quot;&gt;&lt;/a&gt;1.1 Three architecture ?&lt;/h4&gt;&lt;h5 id=&quot;1-1-1-Shared-Nothing-versus-Shared-Everything&quot;&gt;&lt;a href=&quot;#1-1-1-Shared-Nothing-versus-Shared-Everything&quot; class=&quot;headerlink&quot; title=&quot;1.1.1 Shared-Nothing versus Shared-Everything&quot;&gt;&lt;/a&gt;1.1.1 Shared-Nothing versus Shared-Everything&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;Patterns for Distributed or Parallel computing&lt;/li&gt;
&lt;li&gt;big problems, break it down, computing unit&lt;/li&gt;
&lt;li&gt;which pattern to use&lt;br&gt;trader-off between compute and communication costs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MPP?&lt;/p&gt;
    
    </summary>
    
    
      <category term="OS" scheme="http://yoursite.com/tags/OS/"/>
    
      <category term="Architecture" scheme="http://yoursite.com/tags/Architecture/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud Modules</title>
    <link href="http://yoursite.com/2017/05/23/Spring-Cloud-Modules/"/>
    <id>http://yoursite.com/2017/05/23/Spring-Cloud-Modules/</id>
    <published>2017-05-23T08:36:52.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Categories"><a href="#Categories" class="headerlink" title="Categories"></a>Categories</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>eureka<span class="tag">&lt;/<span class="name">module</span>&gt;</span>             <span class="comment">&lt;!-- Eureka server --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>eureka-peer<span class="tag">&lt;/<span class="name">module</span>&gt;</span>        <span class="comment">&lt;!-- Eureka server peer --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>compute-supplier<span class="tag">&lt;/<span class="name">module</span>&gt;</span>   <span class="comment">&lt;!-- service provider --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>compute-supplier0<span class="tag">&lt;/<span class="name">module</span>&gt;</span>  <span class="comment">&lt;!-- service provider replica --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>ribbon-eureka<span class="tag">&lt;/<span class="name">module</span>&gt;</span>      <span class="comment">&lt;!-- client side load balanced, with Hystrix as circuit breaker --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>feign-eureka<span class="tag">&lt;/<span class="name">module</span>&gt;</span>       <span class="comment">&lt;!-- Declarative REST client  --&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Modules"><a href="#Modules" class="headerlink" title="Modules"></a>Modules</h2><h3 id="1-Eureka-server"><a href="#1-Eureka-server" class="headerlink" title="1. Eureka server"></a>1. Eureka server</h3><p>Service discovery, part of Netflix OSS.<br>Serves as server side, while rest serve as Eureka client. </p><h4 id="Peer-Awareness"><a href="#Peer-Awareness" class="headerlink" title="Peer Awareness"></a>Peer Awareness</h4><p>Eureka-server and its replica eureka-server-peer.</p><p>Config both peers to register each other:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">client:</span></span><br><span class="line"><span class="attr">  fetch-registry:</span> <span class="literal">true</span>         <span class="comment"># set true to register peers</span></span><br><span class="line"><span class="attr">  register-with-eureka:</span> <span class="literal">false</span>   <span class="comment"># do not register itself as a client in standalone mode</span></span><br><span class="line"><span class="attr">  healthcheck:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  service-url:</span></span><br><span class="line">    <span class="comment">#defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br><span class="line"><span class="attr">    defaultZone:</span> <span class="attr">http://eureka-server:8761/eureka/</span></span><br></pre></td></tr></table></figure></p><p>While euraka-clients are only register to one of the server, both peers can sync registration info. You can have multiple peers to a system, as long as they are connected to each other by at least one edge, they will synchronize the registrations amongst themselves.</p><p>Run the same server on two hosts, running it in different Spring profiles.</p><h4 id="HA"><a href="#HA" class="headerlink" title="HA"></a>HA</h4><p>Client may config multi servers or only one, peer wil sync automatically. If only one server configured, client loses registration once this server is down.<br>If the first shutdown, then register second.</p><blockquote><p>defaultZone: <a href="http://localhost:8763/eureka/,http://localhost:8762/eureka/" target="_blank" rel="noopener">http://localhost:8763/eureka/,http://localhost:8762/eureka/</a></p><p>Log: Request execution succeeded on retry #2</p></blockquote><h3 id="2-Compute-supplier"><a href="#2-Compute-supplier" class="headerlink" title="2. Compute supplier"></a>2. Compute supplier</h3><p>Service provide, with its replica compute-supplier0.</p><h3 id="3-Ribbon-Eureka"><a href="#3-Ribbon-Eureka" class="headerlink" title="3. Ribbon Eureka"></a>3. Ribbon Eureka</h3><p>A client side IPC(Inter Process Communication)[RPC?] library. Providing: load balancing, fault tolerance, multiple protocol(HTTP, TCP, UDP) support in an asynchronous and reactive model, caching and batching.<br>This client will act as consumer to call Compute supplier for service.</p><h3 id="4-Feign-Eureka"><a href="#4-Feign-Eureka" class="headerlink" title="4. Feign Eureka"></a>4. Feign Eureka</h3><p>A java to http client binder inspired by Retrofit, JAXR-2.0.<br>Declarative(?)<br>Making writing Web Service client easier.<br>This client acts as Feign consumer</p><p>Caution:<br>spring-boot-devtools will cause Feign @Autowired NullPointerException, which will can be solved by adding @ImportAutoConfiguration(FeignAutoConfiguration.class) to main app of Feign consumer.</p><h3 id="5-Zuul-Gateway"><a href="#5-Zuul-Gateway" class="headerlink" title="5. Zuul Gateway"></a>5. Zuul Gateway</h3><p>Support reverse proxy and filter</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Categories&quot;&gt;&lt;a href=&quot;#Categories&quot; class=&quot;headerlink&quot; title=&quot;Categories&quot;&gt;&lt;/a&gt;Categories&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;eureka&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;             &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Eureka server --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;eureka-peer&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Eureka server peer --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;compute-supplier&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- service provider --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;compute-supplier0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- service provider replica --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;ribbon-eureka&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- client side load balanced, with Hystrix as circuit breaker --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;feign-eureka&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Declarative REST client  --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Spring Cloud" scheme="http://yoursite.com/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Integrate Spring Boot with Docker</title>
    <link href="http://yoursite.com/2017/05/23/Integrate-Spring-Boot-with-Docker/"/>
    <id>http://yoursite.com/2017/05/23/Integrate-Spring-Boot-with-Docker/</id>
    <published>2017-05-23T07:42:18.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Integrate-Spring-Boot-with-Docker"><a href="#Integrate-Spring-Boot-with-Docker" class="headerlink" title="Integrate Spring Boot with Docker"></a>Integrate Spring Boot with Docker</h2><p>Find latest version in repository <em>spring-boot-docker</em>.</p><h2 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h2><p>We need:  </p><ol><li>a Docker daemon server installed on Linux host(or VM)  </li><li>a spring-boot project to be integated into Docker  </li><li>a Docker Hub account  </li></ol><a id="more"></a><p>Version:<br>Docker 1.12.0<br>Maven 3.3<br>Spring Boot 1.4.2.RELEASE<br>docker-maven-plugin spotify 0.4.11  </p><h2 id="Procedure"><a href="#Procedure" class="headerlink" title="Procedure"></a>Procedure</h2><h3 id="1-Docker-daemon-server"><a href="#1-Docker-daemon-server" class="headerlink" title="1. Docker daemon server"></a>1. Docker daemon server</h3><p>version: 1.12.0, based on Linux kernel 3.x<br>In this case, CentOS 7.</p><h4 id="1-1-CA"><a href="#1-1-CA" class="headerlink" title="1.1 CA"></a>1.1 CA</h4><ol><li>Generate CA<br>Follow this guide, <a href="https://docs.docker.com/engine/security/https/" target="_blank" rel="noopener">Protect Docker daemon socket</a></li></ol><p><strong>Mind:</strong><br>Make sure your IP is added into extfile.cnf.</p><h4 id="1-2-Startup-and-connection"><a href="#1-2-Startup-and-connection" class="headerlink" title="1.2 Startup and connection"></a>1.2 Startup and connection</h4><ol><li><p>Start up daemon with certificate mode:</p><blockquote><p>$ dockerd –tlsverify –tlscacert=ca.pem –tlscert=server-cert.pem –tlskey=server-key.pem \<br>-H=0.0.0.0:2376</p></blockquote></li><li><p>Test connection:</p><blockquote><p>$ docker –tlsverify –tlscacert=ca.pem –tlscert=cert.pem –tlskey=key.pem \<br>-H=$HOST:2376 version</p></blockquote></li></ol><p><strong>Possible error:</strong>  </p><blockquote><p>Cannot connect to the Docker daemon. Is the docker daemon running on this host?</p></blockquote><p>Solution: check ip or firewalld, use curl command to detect.</p><h3 id="2-Spring-Boot"><a href="#2-Spring-Boot" class="headerlink" title="2. Spring Boot"></a>2. Spring Boot</h3><p>You can use Gradle or Maven to integerate with docker, in this case, we use Maven 3.x.</p><h4 id="2-1-pom-xml-config"><a href="#2-1-pom-xml-config" class="headerlink" title="2.1 pom.xml config"></a>2.1 pom.xml config</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spotify<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>docker-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;docker-maven.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Connect config for Windows Boot2docker --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mind!! Unable to push from this docker daemon server, unknown reason --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;dockerHost&gt;https://192.168.59.103:2376&lt;/dockerHost&gt;</span></span><br><span class="line"><span class="comment">        &lt;dockerCertPath&gt;C:\Users\DT266\.boot2docker\certs\boot2docker-vm&lt;/dockerCertPath&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Connect config for Linux docker server --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mind!! docker daemon must start in secure mode, and CA must include local ip --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dockerHost</span>&gt;</span>https://10.200.157.84:2376<span class="tag">&lt;/<span class="name">dockerHost</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Use certs on local machine --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;dockerCertPath&gt;C:\Users\DT266\.docker&lt;/dockerCertPath&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Use certs in project folder --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dockerCertPath</span>&gt;</span>docker/certs<span class="tag">&lt;/<span class="name">dockerCertPath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">imageName</span>&gt;</span>$&#123;docker.image.prefix&#125;/$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">imageName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">imageTags</span>&gt;</span>v1<span class="tag">&lt;/<span class="name">imageTags</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dockerDirectory</span>&gt;</span>src/main/docker<span class="tag">&lt;/<span class="name">dockerDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>/<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>$&#123;project.build.finalName&#125;.jar<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-build-command"><a href="#2-2-build-command" class="headerlink" title="2.2 build command"></a>2.2 build command</h4><p>Build docker image(and you’ll find result on docker daemon server):</p><blockquote><p>mvn -X clean package docker:build</p></blockquote><p>Follow this guide, <a href="https://spring.io/guides/gs/spring-boot-docker/" target="_blank" rel="noopener">Spring Boot with Docker</a></p><p><strong>Possible error:</strong></p><blockquote><p>javax.net.ssl.SSLException: Unrecognized SSL message, plaintext connection?</p></blockquote><p>Solution: Check if daemon server is startup in secure mode. This error may occur when daemon start without certificate.</p><h3 id="3-Images-management"><a href="#3-Images-management" class="headerlink" title="3. Images management"></a>3. Images management</h3><p>Check images:</p><blockquote><p>docker image</p></blockquote><p>(Requires tls secure by default configuration, or use “docker –tlsverify –tlscacert=ca.pem –tlscert=cert.pem –tlskey=key.pem   -H=$HOST:2376 image” instead)</p><p>Start up with specified name (<em>spring-boot</em>) and port mapping(visit 8080 of host to reach 8080 of container):</p><blockquote><p>docker run –name spring-boot -d -p 8080:8080 skyvoice/spring-boot-docker</p></blockquote><p>Visit <a href="http://your-docker-host:8080/docker" target="_blank" rel="noopener">http://your-docker-host:8080/docker</a> to check result.</p><p>Push this image into your Hub:</p><blockquote><p>docker login</p><p>docker push skyvoice/spring-boot-docker</p></blockquote><p>(Requires an account in Docker Hub and a prepared repository named <em>spring-boot-docker</em>. New version of Docker will not auto create repository any more.)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Integrate-Spring-Boot-with-Docker&quot;&gt;&lt;a href=&quot;#Integrate-Spring-Boot-with-Docker&quot; class=&quot;headerlink&quot; title=&quot;Integrate Spring Boot with Docker&quot;&gt;&lt;/a&gt;Integrate Spring Boot with Docker&lt;/h2&gt;&lt;p&gt;Find latest version in repository &lt;em&gt;spring-boot-docker&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Prepare&quot;&gt;&lt;a href=&quot;#Prepare&quot; class=&quot;headerlink&quot; title=&quot;Prepare&quot;&gt;&lt;/a&gt;Prepare&lt;/h2&gt;&lt;p&gt;We need:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a Docker daemon server installed on Linux host(or VM)  &lt;/li&gt;
&lt;li&gt;a spring-boot project to be integated into Docker  &lt;/li&gt;
&lt;li&gt;a Docker Hub account  &lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
      <category term="Spring Boot" scheme="http://yoursite.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Docker Note</title>
    <link href="http://yoursite.com/2017/04/17/Docker-Note/"/>
    <id>http://yoursite.com/2017/04/17/Docker-Note/</id>
    <published>2017-04-17T10:59:05.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Install-on-CentOS"><a href="#1-Install-on-CentOS" class="headerlink" title="1. Install on CentOS"></a>1. Install on CentOS</h2><p>Requires Kernel 3.0+, and update library before install</p><p><a href="https://docs.docker.com/engine/installation/linux/centos/" target="_blank" rel="noopener">Install on CentOS Guidance</a></p><h2 id="2-Introduction"><a href="#2-Introduction" class="headerlink" title="2. Introduction"></a>2. Introduction</h2><h3 id="2-1-Usage"><a href="#2-1-Usage" class="headerlink" title="2.1 Usage"></a>2.1 Usage</h3><p>container, isolate applications<br>packaged with all its dependencies and libraries(environment)</p><a id="more"></a><h3 id="2-2-Workflow"><a href="#2-2-Workflow" class="headerlink" title="2.2 Workflow"></a>2.2 Workflow</h3><ol><li>Get codes and dependencies tio container</li><li>Configure network or storage(optional)</li><li>Upload builds to a registry</li><li>Swarm cluster and scale(optional)</li><li>Deploy</li></ol><p>A kind of <em>namespace</em> tool?<br>Concentrates on 调度 and 编排 ？</p><h3 id="2-3-Structure"><a href="#2-3-Structure" class="headerlink" title="2.3 Structure"></a>2.3 Structure</h3><h4 id="2-3-1-Components"><a href="#2-3-1-Components" class="headerlink" title="2.3.1 Components"></a>2.3.1 Components</h4><ul><li>Docker Client<br>UI, communicate with Daemon</li><li>Docker Daemon<br>sits on host, answers request</li><li>Docker Index<br>centralized registry</li></ul><h4 id="2-3-2-Elements"><a href="#2-3-2-Elements" class="headerlink" title="2.3.2 Elements"></a>2.3.2 Elements</h4><ul><li>Docker Containers<br>responsible for app’s running, including OS, user files and meta data</li><li>Docker Images<br>read-only templates, help launch Docker containers</li><li>DOckerFile<br>file housing instructions, help automate image creation</li></ul><p><a href="http://blog.flux7.com/hs-fs/hub/411552/file-1222264954-png/blog-files/image-1.png?t=1476806838474&amp;width=696&amp;height=392&amp;name=image-1.png" target="_blank" rel="noopener">Docker Structure</a></p><h4 id="2-3-3-Support-by-OS"><a href="#2-3-3-Support-by-OS" class="headerlink" title="2.3.3 Support by OS"></a>2.3.3 Support by OS</h4><ul><li>Namespaces<br>first level of isolation</li><li>Control Groups<br>a part of LXC(Linux Control), an OS level virtualization method for running multiple isolated Linux systems(containers)</li><li>UnionFS<br>file system</li></ul><p>docker namespaces –&gt; namespaces –&gt; physical memory ?</p><h4 id="2-3-4-Docker-Registry"><a href="#2-3-4-Docker-Registry" class="headerlink" title="2.3.4 Docker Registry"></a>2.3.4 Docker Registry</h4><p>Shelve progress:</p><p><a href="http://dockone.io/article/104" target="_blank" rel="noopener">Docker入门教程（四）Docker Registry</a></p><p>And official doc and guide:<br><a href="https://www.docker.com/sites/default/files/RA_CI%20with%20Docker_08.25.2015.pdf" target="_blank" rel="noopener">RA_CI with Docker</a></p><p><a href="https://docs.docker.com/engine/tutorials/dockerizing/" target="_blank" rel="noopener">Hello world in a container</a></p><h2 id="3-Official-getstarted"><a href="#3-Official-getstarted" class="headerlink" title="3. Official getstarted"></a>3. Official getstarted</h2><h3 id="3-1-starter"><a href="#3-1-starter" class="headerlink" title="3.1 starter"></a>3.1 starter</h3><ol><li><p>run a hello world to check<br>run: create &amp; run a container<br>hello-world: image to load into the container<br><del>option -rm means ..</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker run hello-word</span><br></pre></td></tr></table></figure></li><li><p>list all containers<br>image: is a filesystem and parameters to use at runtime<br>doesn’t have state and never changes<br>Container: a running instance of an image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps -a</span><br></pre></td></tr></table></figure></li><li><p>Find image in Docker Hub<br><a href="https://hub.docker.com/explore/" target="_blank" rel="noopener">Docker Hub</a></p></li><li><p>Build your own image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ touch Dockerfile</span><br><span class="line">Contents:</span><br><span class="line">FROM docker/whalesay:latest</span><br><span class="line">RUN apt-get -y update &amp;&amp; apt-get install -y fortunes</span><br><span class="line">CMD /usr/games/fortune -a | cowsay</span><br><span class="line"></span><br><span class="line">Then build an image from Dockerfile:</span><br><span class="line">$ docker build -t docker-whale .</span><br><span class="line"></span><br><span class="line">The procedure:</span><br><span class="line">1. Docker check things available: send context to Docker daemon</span><br><span class="line">2. load image defined in FROM</span><br><span class="line">3. RUN</span><br><span class="line">4. CMD</span><br></pre></td></tr></table></figure></li><li><p>Push image to Hub/repository<br>sign up for Docker Hub<br>create a repository for image<br>push image to online</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker tag 292ad9b8d884 skyvoice/docker-whale:latest</span><br><span class="line">$ docker login</span><br><span class="line">$ docker push skyvoice/docker-whale</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-2-Manage-images"><a href="#3-2-Manage-images" class="headerlink" title="3.2 Manage images"></a>3.2 Manage images</h3><ol><li><p>list images</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker images</span><br></pre></td></tr></table></figure></li><li><p>remove image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker rmi -f 7d9495d03763</span><br><span class="line">$ docker rmi -f docker-whale</span><br></pre></td></tr></table></figure></li><li><p>daemonized container</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">query Docker daemon, list containers</span><br><span class="line">[docker@dockermount docker]$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES</span><br><span class="line">657b964200ef        ubuntu              &quot;/bin/sh -c &apos;while tr&quot;   About a minute ago   Up About a minute                       suspicious_kilby</span><br><span class="line">Or add flag -l, show only last container started.</span><br><span class="line">add flag -a, show all containers.</span><br><span class="line">add flag -q, show container ids only.</span><br><span class="line"></span><br><span class="line">We can use NAME of this container to query execution logs:</span><br><span class="line">[docker@dockermount docker]$ docker logs suspicious_kilby</span><br><span class="line">It looks inside the container, and shows the standard output of a container.</span><br><span class="line"></span><br><span class="line">And to stop this container:</span><br><span class="line">[docker@dockermount docker]$ docker stop suspicious_kilby</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-3-Run-container"><a href="#3-3-Run-container" class="headerlink" title="3.3 Run container"></a>3.3 Run container</h3><ol><li><p>Run command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run ubuntu /bin/echo &apos;hello ubuntu&apos;</span><br></pre></td></tr></table></figure></li><li><p>Run interactive container</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -t -i ubuntu /bin/bash</span><br></pre></td></tr></table></figure></li></ol><p>-t assigns a pseudo-tty or terminal inside the container<br>-i grabd teh standard input[STDIN] of the container, allow you to make an interactive connection</p><h3 id="3-4-Run-application"><a href="#3-4-Run-application" class="headerlink" title="3.4 Run application"></a>3.4 Run application</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">See port mapping:</span><br><span class="line">$ docker port #name 5000</span><br><span class="line"></span><br><span class="line">View logs:</span><br><span class="line">$ docker logs -f #name</span><br><span class="line"></span><br><span class="line">List processes:</span><br><span class="line">$ docker top #name</span><br><span class="line"></span><br><span class="line">Stop and remove</span><br><span class="line">$ docker stop #name</span><br><span class="line">$ docker rm #name</span><br><span class="line"></span><br><span class="line">Remove all container:</span><br><span class="line">$ docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><blockquote><p>Removing a container is final(cannot undo)</p></blockquote><h3 id="3-5-Network-container"><a href="#3-5-Network-container" class="headerlink" title="3.5 Network container"></a>3.5 Network container</h3><ol><li><p>Name your container:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -P --name web training/webapp python app.py</span><br></pre></td></tr></table></figure></li><li><p>Docker provides two network drivers: <em>bridge</em>(Default) and <em>overlay</em>.<br>Use <em>network</em> sub command to list them:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker network ls</span><br></pre></td></tr></table></figure></li><li><p>View Network info of container:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[docker@dockermount ~]$ docker network inspect bridge</span><br></pre></td></tr></table></figure></li><li><p>Create your own network:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[docker@dockermount ~]$ docker network create -d bridge my-bridge-net</span><br></pre></td></tr></table></figure></li><li><p>Connect your newly running container to this network:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[docker@dockermount ~]$ docker network connect my-bridge-net web</span><br></pre></td></tr></table></figure></li><li><p>Then try <em>ping</em> each other in two containers:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker exec -it db bash</span><br></pre></td></tr></table></figure></li></ol><h4 id="Note-1"><a href="#Note-1" class="headerlink" title="Note"></a>Note</h4><blockquote><p>You can attach many network to a container, but two containers can reach other only in the same network</p></blockquote><h3 id="3-6-Manage-data-in-container"><a href="#3-6-Manage-data-in-container" class="headerlink" title="3.6 Manage data in container"></a>3.6 Manage data in container</h3><h4 id="Data-volume"><a href="#Data-volume" class="headerlink" title="Data volume"></a>Data volume</h4><p>A specially-designed directory, within one or more containers that bypasses the Union File System(operates by creating layers, making them very lightweight and fast)<br>Designed to persist data, even container is removed</p><p>Add a data volume to container:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[docker@dockermount ~]$ docker run -d -P --name web -v /webapp training/webapp python app.py</span><br></pre></td></tr></table></figure></p><p><strong>To be continue….</strong></p><h3 id="3-7-Docker-Certicates-for-both-daemon-and-client"><a href="#3-7-Docker-Certicates-for-both-daemon-and-client" class="headerlink" title="3.7 Docker Certicates for both daemon and client"></a>3.7 Docker Certicates for both daemon and client</h3><p>For detailed procedures:<br><a href="https://docs.docker.com/engine/security/https/" target="_blank" rel="noopener">Protect the Docker daemon socker</a></p><h4 id="Note-2"><a href="#Note-2" class="headerlink" title="Note"></a>Note</h4><blockquote><p>By default, Docker runs via a non-networked Unix socket. Config using an HTTP socket if you need communicate.</p><p>$HOST in the doc is the ip addr of daemon server, not dns</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo subjectAltName = IP:10.200.157.84,IP:10.200.157.48,IP:127.0.0.1 &gt; extfile.cnf</span><br></pre></td></tr></table></figure><p>To integrate with Spring boot on Windows, plz install docker-install.exe and DockerToolbox-1.12.2.exe. They will auto create a vm with installed docker.<br>[Update 2016-11-15]<br>Boot2docker cannot push images into Hub, for unknown reason.<br>Use Linux Docker daemon server instead.</p><p>Connect to docker VM by docker/tcuser</p><h2 id="4-Notice"><a href="#4-Notice" class="headerlink" title="4. Notice"></a>4. Notice</h2><h3 id="Advantages"><a href="#Advantages" class="headerlink" title="Advantages"></a>Advantages</h3><ol><li><p>containers are immutable<br>same image tested by QA will reach production environment with same behaviour</p></li><li><p>container are lightweight<br>memory footprint of it is small</p></li><li><p>container are fast<br>DO NOT treat containers as virtual machines</p></li></ol><h3 id="Mentra"><a href="#Mentra" class="headerlink" title="Mentra"></a>Mentra</h3><ol><li>containers are disposable/ephemeral</li></ol><h3 id="Try-to-Avoid"><a href="#Try-to-Avoid" class="headerlink" title="Try to Avoid"></a>Try to Avoid</h3><ol><li>dont store data</li><li>dont ship application in two pieces</li><li>dont crate large images<br>dont install unnecessary packages or run “update” </li><li>dont use a single layer image<br>use layered filesystem, username definition, runtime installation, configuration and then application<br>easier to recreate, manage and distribute</li><li>dont create images from running containers</li><li>dont use only “lastest” tag<br>like “SNAPSHOT”, unsafe and irretrievable</li><li>dont run more than on process in a single container</li><li>dont store credentials in image<br>use environment variables</li><li>dont run processes as root</li><li>dont rely on IP addresses<br>use environment variables</li></ol><p><strong>Reference:</strong><br><a href="http://developers.redhat.com/blog/2016/02/24/10-things-to-avoid-in-docker-containers/" target="_blank" rel="noopener">10 things to avoid in docker containers</a></p><h3 id="Benefits"><a href="#Benefits" class="headerlink" title="Benefits"></a>Benefits</h3><ol><li><p>Try new Tech at low cost<br>Using images in the Hub</p></li><li><p>Test and run with consistency</p></li><li><p>Build a dev environment </p></li></ol><h2 id="To-Be-continue"><a href="#To-Be-continue" class="headerlink" title="To Be continue"></a>To Be continue</h2><p><a href="https://docs.docker.com/engine/tutorials/dockervolumes/" target="_blank" rel="noopener">Manage data in container</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-Install-on-CentOS&quot;&gt;&lt;a href=&quot;#1-Install-on-CentOS&quot; class=&quot;headerlink&quot; title=&quot;1. Install on CentOS&quot;&gt;&lt;/a&gt;1. Install on CentOS&lt;/h2&gt;&lt;p&gt;Requires Kernel 3.0+, and update library before install&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/installation/linux/centos/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Install on CentOS Guidance&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-Introduction&quot;&gt;&lt;a href=&quot;#2-Introduction&quot; class=&quot;headerlink&quot; title=&quot;2. Introduction&quot;&gt;&lt;/a&gt;2. Introduction&lt;/h2&gt;&lt;h3 id=&quot;2-1-Usage&quot;&gt;&lt;a href=&quot;#2-1-Usage&quot; class=&quot;headerlink&quot; title=&quot;2.1 Usage&quot;&gt;&lt;/a&gt;2.1 Usage&lt;/h3&gt;&lt;p&gt;container, isolate applications&lt;br&gt;packaged with all its dependencies and libraries(environment)&lt;/p&gt;
    
    </summary>
    
      <category term="学习记录" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Centos7.2 Install &amp; Config</title>
    <link href="http://yoursite.com/2017/02/15/Centos7.2_Install_&amp;_Config/"/>
    <id>http://yoursite.com/2017/02/15/Centos7.2_Install_&amp;_Config/</id>
    <published>2017-02-14T16:00:00.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-手动分区"><a href="#1-手动分区" class="headerlink" title="1. 手动分区"></a>1. 手动分区</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/boot   for 200m ext4</span><br><span class="line">swap    for 2G  swap</span><br><span class="line">/home   for 2G  ext4</span><br><span class="line">/       the rest</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="http://note.youdao.com/yws/res/6333/WEBRESOURCEd58258c0dd3dd6a0359d32824e9c7ced" alt="image"></p><h3 id="2-IP-addr"><a href="#2-IP-addr" class="headerlink" title="2. IP addr"></a>2. IP addr</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig not found</span><br></pre></td></tr></table></figure><p>CentOS 7 minimal systems, use the commands “ip addr” and “ip link” to find the details of a network interface card. To know the statistics use “ip -s link”.</p><p><strong>Install ifconfig</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum provides ifconfig</span><br><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><p><strong>Mind: BOTH <em>ifconfig</em> and <em>netstat</em> is obsolete, use <em>ip</em> and <em>ss</em> instead.</strong></p><h3 id="3-配置静态IP地址"><a href="#3-配置静态IP地址" class="headerlink" title="3. 配置静态IP地址"></a>3. 配置静态IP地址</h3><ol><li>查看网络管理器服务的状态：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost network-scripts]# systemctl status NetworkManager.service</span><br></pre></td></tr></table></figure><ol><li>查看网络管理器管理的网络接口: (for eno167 is our goal)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost network-scripts]# nmcli dev status</span><br><span class="line">DEVICE       TYPE      STATE      CONNECTION</span><br><span class="line">eno16777736  ethernet  connected  eno16777736</span><br><span class="line">lo           loopback  unmanaged  --</span><br></pre></td></tr></table></figure><ol><li>修改配置文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/eno16777736</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">*BOOTPROTO=&quot;static&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">NAME=&quot;eno16777736&quot;</span><br><span class="line">UUID=&quot;4c9bca38-d727-4352-b5c9-a4be75a8ed62&quot;</span><br><span class="line">DEVICE=&quot;eno16777736&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">PEERDNS=&quot;yes&quot;</span><br><span class="line">PEERROUTES=&quot;yes&quot;</span><br><span class="line">IPV6_PEERDNS=&quot;yes&quot;</span><br><span class="line">IPV6_PEERROUTES=&quot;yes&quot;</span><br><span class="line">IPV6_PRIVACY=&quot;no&quot;</span><br><span class="line">*NM_CONTROLLED=no       #不通过网络管理器管理</span><br><span class="line">*IPADDR=192.168.1.15    #must</span><br><span class="line">*DNS1=&#123;DNS&#125;</span><br><span class="line">*IPADDR=10.200.157.84</span><br><span class="line">*NETMASK=255.255.255.0</span><br><span class="line">*DNS1=10.133.1.254</span><br></pre></td></tr></table></figure><ol><li>重启网络服务：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network.service</span><br></pre></td></tr></table></figure><ol><li>ping connect: Network is unreachable</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping -c 4 192.168.1.9</span><br></pre></td></tr></table></figure><p>用指令dhclient來與DHCP連線:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dhclient</span><br></pre></td></tr></table></figure><ol><li><p>yum “Couldn’t resolve host ‘mirrorlist.centos.org’” for CentOS 6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/resolv.conf</span><br><span class="line"></span><br><span class="line">And append:</span><br><span class="line"></span><br><span class="line"> nameserver 8.8.8.8 nameserver 8.8.4.4 nameserver 127.0.0.1</span><br></pre></td></tr></table></figure></li><li><p>If still failed to connect outer network:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network:</span><br><span class="line"></span><br><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=centos7</span><br><span class="line">GATEWAY=10.0.0.1</span><br><span class="line">/etc/resolv.conf:</span><br><span class="line"></span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br></pre></td></tr></table></figure></li><li><p>Destination unreachable / No route to host / 断网等各种事件<br>因为VM ware Bridge 模式无法使用，在虚拟机网络编辑器里重置默认值，然后在win10宿主机中为VM net的属性中选上Bridge protocol.</p></li></ol><p>究极大法：Shutdown all VMs, Reboot Host, Reset VMware adapter, Boot VMs, Shutdown firewall</p><h3 id="4-Install-lrzsz-Error"><a href="#4-Install-lrzsz-Error" class="headerlink" title="4. Install lrzsz Error"></a>4. Install lrzsz Error</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error downloading packages: lrzsz-0.12.20-36.el7.x86_64: [Errno 256] No more mirrors to try.</span><br></pre></td></tr></table></figure><p>Try this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum clean all</span><br><span class="line">$ yum makecache</span><br></pre></td></tr></table></figure><p>and <strong><em>dhclient</em></strong> if necessary</p><h3 id="5-防火墙问题"><a href="#5-防火墙问题" class="headerlink" title="5. 防火墙问题"></a>5. 防火墙问题</h3><p>Visit tomcaat at <a href="http://192.168.1.15:8080/" target="_blank" rel="noopener">http://192.168.1.15:8080/</a> failed.<br>Caused by firewall, stop or disable it:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><p>OR<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# systemctl disable firewalld.service</span><br><span class="line">Removed symlink /etc/systemd/system/basic.target.wants/firewalld.service.</span><br><span class="line">Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.</span><br></pre></td></tr></table></figure></p><p>OR 允许8080端口流量通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone= --add-port=8080/tcp --permanent</span><br></pre></td></tr></table></figure><p>参考：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state # 检查防火墙状态</span><br><span class="line">firewall-cmd --add-service=http --permanent # 允许服务流量通过防火墙，后跟 --permanent 为永久修改，否则重载以后就不失效了</span><br><span class="line">firewall-cmd --zone= --add-port=80/tcp --permanent # 允许端口流量通过防火墙</span><br><span class="line">firewall-cmd --reload # 重新加载防火墙</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html" target="_blank" rel="noopener">Red Hat 防火墙使用</a></p></blockquote><h3 id="6-Hostname-修改"><a href="#6-Hostname-修改" class="headerlink" title="6. Hostname 修改"></a>6. Hostname 修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# hostnamectl set-hostname master15</span><br></pre></td></tr></table></figure><p>查看结果(静态、瞬态和灵活主机名):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hostnamectl status</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><p>对于静态/瞬态主机名，任何特殊字符或空格都会被移除，字母转小字。修改静态主机名，/etc/hostname 将被自动更新。但/etc/hosts需要手动更新。</p><h3 id="7-User-and-SSH"><a href="#7-User-and-SSH" class="headerlink" title="7. User and SSH"></a>7. User and SSH</h3><p>Initial new server by new user and SSH:<br><a href="https://www.digitalocean.com/community/tutorials/initial-server-setup-with-centos-7" target="_blank" rel="noopener">New Server Initial</a></p><h3 id="8-Configuring-Basic-Firewall"><a href="#8-Configuring-Basic-Firewall" class="headerlink" title="8. Configuring Basic Firewall"></a>8. Configuring Basic Firewall</h3><p>Start up <em>firewalld</em>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start firewalld</span><br></pre></td></tr></table></figure></p><p>Allow SSH with default port:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --add-service=ssh</span><br></pre></td></tr></table></figure></p><p>Timezone config:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl</span><br><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line">ntpdate time.windows.com </span><br><span class="line">hwclock -w</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-手动分区&quot;&gt;&lt;a href=&quot;#1-手动分区&quot; class=&quot;headerlink&quot; title=&quot;1. 手动分区&quot;&gt;&lt;/a&gt;1. 手动分区&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/boot   for 200m ext4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;swap    for 2G  swap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/home   for 2G  ext4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/       the rest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="VM配置" scheme="http://yoursite.com/categories/VM%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Centos" scheme="http://yoursite.com/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Centos6.5 Install &amp; Config</title>
    <link href="http://yoursite.com/2016/10/19/Centos6.5_Install_&amp;_Config/"/>
    <id>http://yoursite.com/2016/10/19/Centos6.5_Install_&amp;_Config/</id>
    <published>2016-10-18T16:00:00.000Z</published>
    <updated>2017-12-25T11:54:38.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Centos6-5"><a href="#Centos6-5" class="headerlink" title="Centos6.5"></a>Centos6.5</h2><h3 id="Basic-Install"><a href="#Basic-Install" class="headerlink" title="Basic Install"></a>Basic Install</h3><h4 id="1-install-tomcat-jdk-nginx"><a href="#1-install-tomcat-jdk-nginx" class="headerlink" title="1. install tomcat, jdk, nginx"></a>1. install tomcat, jdk, nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost temp]# tar -zxvf apache-tomcat-7.0.68.tar.gz -C ../tomcat</span><br><span class="line">[root@localhost temp]# wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.zip</span><br><span class="line">[root@localhost pcre-8.37]# yum install gcc gcc-c++ autoconf make</span><br><span class="line">[root@localhost pcre-8.37]# ./configure &amp; make &amp; make install</span><br><span class="line">[root@localhost temp]# ./configure --prefix=/usr/local/nginx --conf-path=/usr/local/nginx/nginx.conf</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>Simplier way to install nginx</li></ul><p>First, install Extra Packages for Enterprise Linux<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install epel-release</span><br></pre></td></tr></table></figure></p><p>Then, install nginx:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install nginx</span><br></pre></td></tr></table></figure></p><p>Then, start ngix:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/nginx start</span><br></pre></td></tr></table></figure></p><p>Config here:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure></p><p>Shutdown:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nginx -s quit</span><br></pre></td></tr></table></figure></p><p><strong>注意：</strong><br>普通用户无法启动 nginx, 其端口为80，1024以下的端口只有 root 能监听，<br>有些文件也无法访问</p><p><strong>解决：</strong><br>切换 root 用户, /usr/sbin：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># chown root nginx</span><br><span class="line"># chmod u+s nginx</span><br></pre></td></tr></table></figure></p><ul><li>nginx startup cmd</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# /usr/local/nginx/sbin/nginx</span><br><span class="line">[root@localhost ~]# netstat -ano |grep 80</span><br></pre></td></tr></table></figure><h4 id="2-Install-tomcat-as-a-service"><a href="#2-Install-tomcat-as-a-service" class="headerlink" title="2. Install tomcat as a service"></a>2. Install tomcat as a service</h4><p>Change to the /etc/init.d directory and create a script called ‘tomcat’ as shown below.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@srv6 share]# cd /etc/init.d</span><br><span class="line">[root@srv6 init.d]# vi tomcat</span><br></pre></td></tr></table></figure></p><p>And here is the script we will use.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># description: Tomcat Start Stop Restart</span><br><span class="line"># processname: tomcat</span><br><span class="line"># chkconfig: 234 20 80</span><br><span class="line">JAVA_HOME=/usr/java/jdk1.7.0_05</span><br><span class="line">export JAVA_HOME</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export PATH</span><br><span class="line">CATALINA_HOME=/usr/share/apache-tomcat-7.0.29</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">start)</span><br><span class="line">sh $CATALINA_HOME/bin/startup.sh</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">sh $CATALINA_HOME/bin/shutdown.sh</span><br><span class="line">;;</span><br><span class="line">restart)</span><br><span class="line">sh $CATALINA_HOME/bin/shutdown.sh</span><br><span class="line">sh $CATALINA_HOME/bin/startup.sh</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><blockquote><p><a href="http://www.davidghedini.com/pg/entry/install_tomcat_7_on_centos" target="_blank" rel="noopener">Tomcat install reference url</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@srv6 init.d]# chmod 755 tomcat</span><br><span class="line">[root@srv6 init.d]# chkconfig --add tomcat</span><br><span class="line">[root@srv6 init.d]# chkconfig --level 234 tomcat on</span><br></pre></td></tr></table></figure><blockquote><p><a href="http://www.davidghedini.com/pg/entry/install_tomcat_7_on_centos" target="_blank" rel="noopener">reference url</a></p></blockquote><h4 id="3-Install-Redis"><a href="#3-Install-Redis" class="headerlink" title="3. Install Redis"></a>3. Install Redis</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx redis]# make &amp;&amp; make install</span><br><span class="line">[root@nginx redis]# redis-server /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><blockquote><p>仅修改： daemonize yes （no–&gt;yes）</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/usr/local/bin/redis-server /etc/redis/redis.conf &amp;&quot; &gt;&gt; /etc/rc.local</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://segmentfault.com/a/1190000002685224" target="_blank" rel="noopener">CentOS6 安装 Redis</a></p></blockquote><h4 id="4-install-mysql"><a href="#4-install-mysql" class="headerlink" title="4. install mysql"></a>4. install mysql</h4><p>查看 mysql：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list | grep mysql</span><br></pre></td></tr></table></figure><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-server mysql mysql-devel</span><br></pre></td></tr></table></figure><p>查看安装结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# rpm -qi mysql-server</span><br></pre></td></tr></table></figure><p>首次启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# service mysqld start</span><br></pre></td></tr></table></figure><p>Set a password:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# /usr/bin/mysqladmin -u root password 123456</span><br></pre></td></tr></table></figure><p>设置开机自启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# chkconfig mysqld on</span><br></pre></td></tr></table></figure><h4 id="5-install-varnish"><a href="#5-install-varnish" class="headerlink" title="5. install varnish"></a>5. install varnish</h4><p>使用epel源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# rpm -ivh http://dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm</span><br></pre></td></tr></table></figure><p>check varnish:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# yum list|grep varnish</span><br></pre></td></tr></table></figure><p>Startup:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# service varnish start</span><br></pre></td></tr></table></figure><p>Check:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]# varnishd -V</span><br></pre></td></tr></table></figure><p>For more details:</p><blockquote><p><a href="https://varnish-cache.org/docs/4.0/index.html#" target="_blank" rel="noopener">Varnish official User Guide</a></p></blockquote><h4 id="6-Install-Maven"><a href="#6-Install-Maven" class="headerlink" title="6. Install Maven"></a>6. Install Maven</h4><p>wget and tar and config the env.</p><p>For mvnw:</p><p><a href="https://github.com/takari/maven-wrapper" target="_blank" rel="noopener">https://github.com/takari/maven-wrapper</a></p><h4 id="1-Install-ZooKeeper"><a href="#1-Install-ZooKeeper" class="headerlink" title="1. Install ZooKeeper"></a>1. Install ZooKeeper</h4><ul><li>启动</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zookeeper-3.4.6/bin/zkServer.sh start</span><br></pre></td></tr></table></figure><ul><li>输入jps命令查看进程</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1573 QuorumPeerMain</span><br><span class="line">1654 Jps</span><br></pre></td></tr></table></figure><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><h3 id="1-Set-time-zone"><a href="#1-Set-time-zone" class="headerlink" title="1. Set time zone"></a>1. Set time zone</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@demo81 Asia]# cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line">[root@demo81 Asia]# vim /etc/sysconfig/clock</span><br></pre></td></tr></table></figure><p>Add line:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UTC=false or no — The hardware clock is set to local time.</span><br></pre></td></tr></table></figure><p>Reload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@demo81 Asia]# /etc/init.d/ntpd restart</span><br><span class="line">OR:</span><br><span class="line">[root@dlp ~]# source /etc/sysconfig/clock</span><br></pre></td></tr></table></figure><p>Check:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@demo81 Asia]# date</span><br><span class="line">  2016年 05月 26日 星期四 09:36:10 CST</span><br></pre></td></tr></table></figure><h4 id="2-环境变量-PATH"><a href="#2-环境变量-PATH" class="headerlink" title="2. 环境变量 $PATH"></a>2. 环境变量 $PATH</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># echo &apos;pathmunge /usr/local/maven/bin&apos; &gt; /etc/profile.d/mvn.sh</span><br><span class="line"># chmod +x /etc/profile.d/mvn.sh</span><br><span class="line"># . /etc/profile</span><br><span class="line"># echo $PATH</span><br><span class="line">/usr/local/maven/bin:/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/jdk/bin:/usr/local/jdk/jre/bin:/root/bin:/usr/local/jdk/bin:/usr/local/jdk/jre/bin</span><br></pre></td></tr></table></figure><p>pathmunge 是redhat版本中系统变量profile中的函数，判断当前系统是否有此命令，如果没有，放置在之前或之后 ？</p><h4 id="3-vim"><a href="#3-vim" class="headerlink" title="3. vim"></a>3. vim</h4><ol><li><p>Vim show line number 显示行号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Find vimrc file:</span><br><span class="line">$ whereis vimrc</span><br><span class="line">$ sudo vim /etc/vimrc</span><br><span class="line">Add: set nu!</span><br></pre></td></tr></table></figure></li><li><p>Vim 查找单词<br>配置：</p><blockquote><p>set insearch</p></blockquote></li></ol><p>使用 /word 查找单词</p><p><a href="http://coolshell.cn/articles/5426.html" target="_blank" rel="noopener">vim 深造</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Centos6-5&quot;&gt;&lt;a href=&quot;#Centos6-5&quot; class=&quot;headerlink&quot; title=&quot;Centos6.5&quot;&gt;&lt;/a&gt;Centos6.5&lt;/h2&gt;&lt;h3 id=&quot;Basic-Install&quot;&gt;&lt;a href=&quot;#Basic-Install&quot; class=&quot;headerlink&quot; title=&quot;Basic Install&quot;&gt;&lt;/a&gt;Basic Install&lt;/h3&gt;&lt;h4 id=&quot;1-install-tomcat-jdk-nginx&quot;&gt;&lt;a href=&quot;#1-install-tomcat-jdk-nginx&quot; class=&quot;headerlink&quot; title=&quot;1. install tomcat, jdk, nginx&quot;&gt;&lt;/a&gt;1. install tomcat, jdk, nginx&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost temp]# tar -zxvf apache-tomcat-7.0.68.tar.gz -C ../tomcat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost temp]# wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost pcre-8.37]# yum install gcc gcc-c++ autoconf make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost pcre-8.37]# ./configure &amp;amp; make &amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost temp]# ./configure --prefix=/usr/local/nginx --conf-path=/usr/local/nginx/nginx.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="VM配置" scheme="http://yoursite.com/categories/VM%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Centos" scheme="http://yoursite.com/tags/Centos/"/>
    
  </entry>
  
</feed>
